{"version":3,"sources":["webpack://Layer5/./src/sections/Blog/Blog-grid/blogGrid.style.js","webpack://Layer5/./src/sections/Blog/Blog-grid/index.js","webpack://Layer5/./src/templates/blog.js"],"names":["BlogPageWrapper","styled","data","isListView","setListView","setGridView","pageContext","PageHeader","title","path","img","RssFeedIcon","feedlink","className","xs","lg","allMdx","nodes","map","id","frontmatter","fields","key","sm","Card","text","props","useState","setIsListView","useEffect","location","state","BlogView","ThemeProvider","theme","description","Navigation","Footer"],"mappings":"2RACaA,EAAkBC,yBAAH,0EAAGA,CAAH,8UC6C5B,EAlCiB,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAC7D,OACE,gBAACN,EAAD,KACE,gBAACO,EAAA,EAAD,CAAYC,MAAM,OAAOC,KAAK,OAAOC,IAAKC,IAAaC,SAAS,mBAChE,uBAAKC,UAAU,qBACb,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,gBAAC,IAAD,CAAiBZ,WAAYA,EAAYC,YAAaA,EACpDC,YAAcA,IAEhB,uBAAKQ,UAAU,qBACb,gBAAC,KAAD,KACGX,EAAKc,OAAOC,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,OAAnB,OACrB,gBAAC,KAAD,CAAKC,IAAKH,EAAIL,GAAI,GAAIS,GAAI,GACxB,gBAACC,EAAA,EAAD,CAAMJ,YAAaA,EAAaC,OAAQA,QAG5C,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAOf,YAAaA,EAAamB,KAAM,QAAStB,WAAYA,QAKpE,gBAAC,KAAD,CAAKW,GAAI,GAAIC,GAAI,GACf,gBAAC,IAAD,Y,4CCgDd,EAxCa,SAAAW,GAAU,IAAD,GACgBC,eAAS,GAAtCxB,EADa,KACDyB,EADC,KAGdxB,EAAc,WAClBwB,GAAc,KAOhBC,gBAAU,WACJH,EAAMI,SAASC,OACbL,EAAMI,SAASC,MAAM5B,YAAYC,MAEtC,IAEH,IAAI4B,EAAW,SAAAN,GACb,OAAIvB,EACM,gBAAC,IAAauB,GAChB,gBAAC,EAAaA,IAGxB,OACE,gBAAC,EAAAO,cAAD,CAAeC,MAAOA,KACpB,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAK1B,MAAM,OAAO2B,YAAY,wIAE9B,gBAACC,EAAA,EAAD,MACA,gBAACJ,EAAD,CAAU9B,KAAMwB,EAAMxB,KAAMC,WAAYA,EACtCC,YAAaA,EAAaC,YAxBd,WAClBuB,GAAc,IAwBRtB,YAAaoB,EAAMpB,cAErB,gBAAC+B,EAAA,EAAD","file":"component---src-templates-blog-js-3e5fc0f160b6d61b9833.js","sourcesContent":["import styled from \"styled-components\";\nexport const BlogPageWrapper = styled.div`\n\n    .blog-grid-wrapper{\n        margin: 5rem auto;\n    }\n\n    @media only screen and (max-width: 992px) {\n        .blog-page-wrapper{\n            margin-bottom: 5rem;\n        }\n    }\n\n    @media only screen and (max-width: 575px) {\n        .blog-grid-wrapper{\n            margin: 0 auto 5rem;\n        }\n    }\n`;\n","import React from \"react\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport Card from \"../../../components/Card\";\nimport Pager from \"../../../components/pager\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\n\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\n\nimport { BlogPageWrapper } from \"./blogGrid.style\";\n\nconst BlogGrid = ({data, isListView, setListView, setGridView, pageContext}) => {\n  return (\n    <BlogPageWrapper>\n      <PageHeader title=\"Blog\" path=\"Blog\" img={RssFeedIcon} feedlink=\"/blog/feed.xml\"/>\n      <div className=\"blog-page-wrapper\">\n        <Container>\n          <Row>\n            <Col xs={12} lg={8}>\n              <BlogViewToolTip isListView={isListView} setListView={setListView}\n                setGridView ={setGridView}\n              />\n              <div className=\"blog-grid-wrapper\">\n                <Row>\n                  {data.allMdx.nodes.map(({id, frontmatter, fields }) => (\n                    <Col key={id} xs={12} sm={6} >\n                      <Card frontmatter={frontmatter} fields={fields}/>\n                    </Col>\n                  ))}\n                  <Col>\n                    <Pager pageContext={pageContext} text={\"Posts\"} isListView={isListView}/>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={12} lg={4}>\n              <Sidebar/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogGrid;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport Navigation from \"../sections/General/Navigation\";\nimport BlogGrid from \"../sections/Blog/Blog-grid\";\nimport Footer from \"../sections/General/Footer\";\n\nimport { GlobalStyle } from \"../sections/app.style\";\nimport theme from \"../theme/app/themeStyles\";\n\nimport {graphql} from \"gatsby\";\nimport BlogList from \"../sections/Blog/Blog-list\";\n\nexport const query = graphql`query allBlogs($skip: Int!, $limit: Int!) {\n  allMdx(\n    sort: {fields: [frontmatter___date], order: DESC}\n    filter: {fields: {collection: {eq: \"blog\"}}, frontmatter: {published: {eq: true}}}\n    skip: $skip\n    limit: $limit\n  ) {\n    nodes {\n      id\n      frontmatter {\n        title\n        date(formatString: \"MMM Do, YYYY\")\n        author\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n          extension\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n}\n`;\n\nconst Blog = props => {\n  const [isListView, setIsListView] = useState(false);\n\n  const setListView = () => {\n    setIsListView(true);\n  };\n\n  const setGridView = () => {\n    setIsListView(false);\n  };\n\n  useEffect(() => {\n    if (props.location.state){\n      if (props.location.state.isListView) setListView();\n    }\n  }, []);\n\n  let BlogView = props => {\n    if (isListView)\n      return (<BlogList {...props} />);\n    return (<BlogGrid {...props} />);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO title=\"Blog\" description=\"Articles how to service mesh from the world's largest service mesh community.\n              Service mesh how-tos and cloud native ecosystem news.\" />\n        <Navigation />\n        <BlogView data={props.data} isListView={isListView}\n          setListView={setListView} setGridView={setGridView}\n          pageContext={props.pageContext}\n        />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}