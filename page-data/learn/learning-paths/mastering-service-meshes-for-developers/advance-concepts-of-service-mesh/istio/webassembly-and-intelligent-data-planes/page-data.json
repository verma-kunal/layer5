{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-service-meshes-for-developers/advance-concepts-of-service-mesh/istio/webassembly-and-intelligent-data-planes/","result":{"data":{"chapter":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"chapterTitle\": \"WebAssembly and intelligent data planes\",\n  \"description\": \"Meshery is the service mesh management plane which offers lifecycle, configuration, and performance management of service meshes and their workloads.\",\n  \"videos\": 4,\n  \"lectures\": 12,\n  \"order\": 7\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"p\", null, \"In this lab, you will use the sample application \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/layer5io/image-hub\"\n  }, \"Image Hub\"), \". This version of the Image Hub filter has been simplified for your lab. To self-study deeper functionality, try the other version of the Image Hub filter that is available in the Image Hub repo.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Deploy Sample Application\"), mdx(\"p\", null, \"Using Meshery, select Istio from the Management menu.\"), mdx(\"p\", null, \"In the Istio management page:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Type default into the namespace field.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click the (+) icon on the Manage Sample Application Lifecycle card and select Image Hub Application to install the latest version of Image Hub\")), mdx(\"img\", {\n    src: installimagehub,\n    align: \"center\",\n    width: \"100%\"\n  }), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Load the filter\"), mdx(\"p\", null, \"Next, load the custom Envoy filter. This filter is written in Rust and is compiled against WebAssembly as it's target runtime.\"), mdx(\"p\", null, \"Using Meshery, select Istio from the Management menu.\"), mdx(\"p\", null, \"In the Istio management page:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Type default into the namespace field.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click the (+) icon on the Apply Service Mesh Configuration card and select Envoy Filter for Image Hub to deploy the custom filter.\")), mdx(\"img\", {\n    src: deployenvoyfilter,\n    align: \"center\",\n    width: \"100%\"\n  }), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Send traffic\"), mdx(\"br\", null), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Analyze behavior\"), mdx(\"p\", null, \"Alternative, manual installation steps are provided for reference below. No need to execute these if you have performed the steps above.\"), mdx(\"p\", null, \"Manually deploy the Image Hub filter.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"apiVersion: networking.istio.io/v1alpha3\\nkind: EnvoyFilter\\nmetadata:\\n  name: custom-filter\\nspec:\\n  configPatches:\\n    - applyTo: HTTP_FILTER\\n      match:\\n        context: SIDECAR_OUTBOUND # will match outbound listeners in all sidecars\\n        listener:\\n          portNumber: 9080\\n          filterChain:\\n            name: envoy.http_connection_manager\\n            filter:\\n              name: \\\"envoy.tcp_proxy\\\"\\n      patch:\\n        operation: INSERT_BEFORE\\n        value:\\n          # This is the full filter config including the name and config or typed_config section.\\n          name: \\\"envoy.filters.http.wasm\\\"\\n          config:\\n            config:\\n              name: custom-filter\\n              rootId: my_root_id\\n              vmConfig:\\n                code:\\n                  local:\\n                    filename: /var/lib/imagehub/filter.wasm\\n                runtime: envoy.wasm.runtime.v8\\n                vmId: custom-filter\\n                allow_precompiled: true\\n  workloadSelector:\\n    labels:\\n      app: api-v1\\n      version: v1\\n\\n\")), mdx(\"p\", null, \"Manually patch the Image Hub Deployment.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"---(\\n  // kubectl patch deployment/api-v1 -p '\\n  {\\n    \\\"spec\\\": {\\n      \\\"template\\\": {\\n        \\\"metadata\\\": {\\n          \\\"annotations\\\": {\\n            \\\"sidecar.istio.io/userVolumeMount\\\": \\\"[{\\\\\\\"mountPath\\\\\\\":\\\\\\\"/var/lib/imagehub\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"wasm-filter\\\\\\\"}]\\\"\\n          }\\n        },\\n        \\\"spec\\\": {\\n          \\\"initContainers\\\": [\\n            {\\n              \\\"command\\\": [\\n                \\\"curl\\\",\\n                \\\"-L\\\",\\n                \\\"-o\\\",\\n                \\\"/var/lib/imagehub/filter.wasm\\\",\\n                \\\"https://github.com/layer5io/advanced-istio-service-mesh-workshop/raw/master/lab-7/ratelimiter/ratelimit-filter.wasm\\\"\\n              ],\\n              \\\"image\\\": \\\"curlimages/curl\\\",\\n              \\\"imagePullPolicy\\\": \\\"Always\\\",\\n              \\\"name\\\": \\\"add-wasm\\\",\\n              \\\"resources\\\": {},\\n              \\\"terminationMessagePath\\\": \\\"/dev/termination-log\\\",\\n              \\\"terminationMessagePolicy\\\": \\\"File\\\",\\n              \\\"volumeMounts\\\": [\\n                {\\n                  \\\"mountPath\\\": \\\"/var/lib/imagehub\\\",\\n                  \\\"name\\\": \\\"wasm-filter\\\"\\n                }\\n              ]\\n            }\\n          ],\\n          \\\"volumes\\\": [\\n            {\\n              \\\"emptyDir\\\": {},\\n              \\\"name\\\": \\\"wasm-filter\\\"\\n            }\\n          ]\\n        }\\n      }\\n    }\\n  }\\n)\\n// '\\n\\n\")), mdx(\"p\", null, \"A future version of Meshery will allow you to deploy any filter from the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/layer5io/wasm-filters\"\n  }, \"wasm-filters\"), \" repo. PR the repo to upload your custom filter and have Meshery deploy it.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"WebAssembly and intelligent data planes","description":"Meshery is the service mesh management plane which offers lifecycle, configuration, and performance management of service meshes and their workloads."},"fields":{"slug":"learn/learning-paths/mastering-service-meshes-for-developers/advance-concepts-of-service-mesh/istio/webassembly-and-intelligent-data-planes/","course":"advance-concepts-of-service-mesh","learnpath":"mastering-service-meshes-for-developers","chapter":"webassembly-and-intelligent-data-planes"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Advance Concepts of Service Meshes - Hands On","meshesYouLearn":[{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/be16a1eb5f902113368ddb9631638bec/59f98/linkerd.png","srcSet":"/static/be16a1eb5f902113368ddb9631638bec/d28d4/linkerd.png 13w,\n/static/be16a1eb5f902113368ddb9631638bec/933ac/linkerd.png 25w,\n/static/be16a1eb5f902113368ddb9631638bec/59f98/linkerd.png 50w,\n/static/be16a1eb5f902113368ddb9631638bec/fb990/linkerd.png 100w","sizes":"(min-width: 50px) 50px, 100vw"},"sources":[{"srcSet":"/static/be16a1eb5f902113368ddb9631638bec/02e18/linkerd.webp 13w,\n/static/be16a1eb5f902113368ddb9631638bec/04db5/linkerd.webp 25w,\n/static/be16a1eb5f902113368ddb9631638bec/2bba5/linkerd.webp 50w,\n/static/be16a1eb5f902113368ddb9631638bec/2d116/linkerd.webp 100w","type":"image/webp","sizes":"(min-width: 50px) 50px, 100vw"}]},"width":50,"height":47}},"extension":"png","publicURL":"/static/be16a1eb5f902113368ddb9631638bec/linkerd.png"},"name":"Linkerd"}]},"fields":{"slug":"learn/learning-paths/mastering-service-meshes-for-developers/advance-concepts-of-service-mesh/"}}]},"TOC":{"nodes":[{"frontmatter":{"order":8,"chapterTitle":"Conclusion"},"fields":{"section":"istio","chapter":"conclusion"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"istio","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Istio Ingress Gateway"},"fields":{"section":"istio","chapter":"expose-services"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"istio","chapter":"getting-started"}},{"frontmatter":{"order":4,"chapterTitle":"Observability"},"fields":{"section":"istio","chapter":"observability"}},{"frontmatter":{"order":6,"chapterTitle":"Service security capabilities"},"fields":{"section":"istio","chapter":"service-security-capabilities"}},{"frontmatter":{"order":5,"chapterTitle":"Traffic management"},"fields":{"section":"istio","chapter":"traffic-management"}},{"frontmatter":{"order":7,"chapterTitle":"WebAssembly and intelligent data planes"},"fields":{"section":"istio","chapter":"webassembly-and-intelligent-data-planes"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}}]}},"pageContext":{"learnpath":"mastering-service-meshes-for-developers","slug":"learn/learning-paths/mastering-service-meshes-for-developers/advance-concepts-of-service-mesh/istio/webassembly-and-intelligent-data-planes/","course":"advance-concepts-of-service-mesh","section":"istio","chapter":"webassembly-and-intelligent-data-planes","pageType":"chapter"}},"staticQueryHashes":["4047814605","7929417"]}