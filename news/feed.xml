<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Layer5]]></title><description><![CDATA[Making service meshes available to the rest of us. Open source software for management of service meshes. Allowing developers to focus on business logic, not infrastructure concerns. Empowering operators to confidentally run modern infrastructure.]]></description><link>https://layer5.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 24 Jan 2022 08:19:40 GMT</lastBuildDate><item><title><![CDATA[Analyzing Service Mesh Performance]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Analyzing Service Mesh Performance",
  "subtitle": "",
  "date": "2021-11-10 04:00:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./cover.png",
  "eurl": "https://www.nxtbook.com/nxtbooks/ieee/bridge_issue3_2021/index.php#/p/16",
  "published": true,
  "redirect_from": ["/news/analyzing-service-mesh-performance"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "As a forthcoming, ubiquitous layer of cloud native infrastructure, service meshes offer deep and uniform control and visibility into the topology and state of ephemeral microservices. Managing the myriad configurations of cloud native infrastructure is greatly facilitated by a service mesh, but succinctly summarizing and characterizing the performance of your service mesh in context of your unique workloads and your infrastructure of choice is a challenge unto its own."), mdx("p", null, "We explore how to model your service mesh topology and optimize for your ideal configuration in context of how much you value properties of resiliency, performance, throughput, latency, and so on before you deploy to production. Readers will understand how distributed performance analysis offers unique insights on the behavior of microservices and their efficiency of operation, see examples of how common types of workloads perform under specific service mesh functions, and be empowered with analytical tooling that can be used to make optimized configurations."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full article"), " on ", mdx("a", {
    parentName: "p",
    "href": "https://www.nxtbook.com/nxtbooks/ieee/bridge_issue3_2021/index.php#/p/16"
  }, "The Bridge 2021 Issue 3/Volume 117"), " from ", mdx("a", {
    parentName: "p",
    "href": "/community/members/lee-calcote"
  }, "Lee Calcote"), ", ", mdx("a", {
    parentName: "p",
    "href": "/community/members/sunku-ranganath"
  }, "Sunku Ranganath"), ", Mrittika Ganguli and ", mdx("a", {
    parentName: "p",
    "href": "/community/members/otto-van-der-schaaf"
  }, "Otto Van Der Schaaf"), ".")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/analyzing-service-mesh-performance</link><guid isPermaLink="false">https://layer5.io/company/news/analyzing-service-mesh-performance</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Wed, 10 Nov 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/e05cf84d0d93f75fe0f34c7932432778/cover.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;As a forthcoming, ubiquitous layer of cloud native infrastructure, service meshes offer deep and uniform control and visibility into the topology and state of ephemeral microservices. Managing the myriad configurations of cloud native infrastructure is greatly facilitated by a service mesh, but succinctly summarizing and characterizing the performance of your service mesh in context of your unique workloads and your infrastructure of choice is a challenge unto its own.&lt;/p&gt;&lt;p&gt;We explore how to model your service mesh topology and optimize for your ideal configuration in context of how much you value properties of resiliency, performance, throughput, latency, and so on before you deploy to production. Readers will understand how distributed performance analysis offers unique insights on the behavior of microservices and their efficiency of operation, see examples of how common types of workloads perform under specific service mesh functions, and be empowered with analytical tooling that can be used to make optimized configurations.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the full article&lt;/strong&gt; on &lt;a href=&quot;https://www.nxtbook.com/nxtbooks/ieee/bridge_issue3_2021/index.php#/p/16&quot;&gt;The Bridge 2021 Issue 3/Volume 117&lt;/a&gt; from &lt;a href=&quot;/community/members/lee-calcote&quot;&gt;Lee Calcote&lt;/a&gt;, &lt;a href=&quot;/community/members/sunku-ranganath&quot;&gt;Sunku Ranganath&lt;/a&gt;, Mrittika Ganguli and &lt;a href=&quot;/community/members/otto-van-der-schaaf&quot;&gt;Otto Van Der Schaaf&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[6 CNCF Service Mesh Tools]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "6 CNCF Service Mesh Tools",
  "subtitle": "",
  "date": "2021-10-15 04:00:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./mesh-tools.png",
  "eurl": "https://containerjournal.com/features/6-cncf-service-mesh-tools",
  "published": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "Microservices have grown tremendously in use\u2014they enable decoupled, reusable components and support a rapid development approach. However, it\u2019s challenging to manage a sea of disparate microservices. It\u2019s specifically difficult to consistently apply standard features such as traffic management, security and observability mechanisms across all microservices. This issue grows as the number of microservices climbs into the hundreds and thousands."), mdx("p", null, "This is where service mesh comes in. Service mesh helps to apply common observability and security features across applications. It\u2019s typically split into a control plane, used to configure features, and a data plane, consisting of a sidecar proxy alongside each application. Nowadays, several service mesh options exist in the market, each with varying levels of complexity."), mdx("p", null, "The Cloud Native Computing Foundation (CNCF) is home to much of today\u2019s innovative cloud-native technology. The foundation now hosts a few service meshes and related projects. Below, we\u2019ll outline the CNCF service mesh toolset to better understand how engineers can adopt these tools and their benefits."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full article on ", mdx("a", {
    parentName: "strong",
    "href": "https://containerjournal.com/features/6-cncf-service-mesh-tools"
  }, "Container Journal"), "."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/6-cncf-service-mesh-tools</link><guid isPermaLink="false">https://layer5.io/company/news/6-cncf-service-mesh-tools</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Fri, 15 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/3a816fa708e72b4d2eb3615f136db241/mesh-tools.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;Microservices have grown tremendously in use—they enable decoupled, reusable components and support a rapid development approach. However, it’s challenging to manage a sea of disparate microservices. It’s specifically difficult to consistently apply standard features such as traffic management, security and observability mechanisms across all microservices. This issue grows as the number of microservices climbs into the hundreds and thousands.&lt;/p&gt;&lt;p&gt;This is where service mesh comes in. Service mesh helps to apply common observability and security features across applications. It’s typically split into a control plane, used to configure features, and a data plane, consisting of a sidecar proxy alongside each application. Nowadays, several service mesh options exist in the market, each with varying levels of complexity.&lt;/p&gt;&lt;p&gt;The Cloud Native Computing Foundation (CNCF) is home to much of today’s innovative cloud-native technology. The foundation now hosts a few service meshes and related projects. Below, we’ll outline the CNCF service mesh toolset to better understand how engineers can adopt these tools and their benefits.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the full article on &lt;a href=&quot;https://containerjournal.com/features/6-cncf-service-mesh-tools&quot;&gt;Container Journal&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[CNCF Adopts Meshery to Advance Service Mesh Management]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "CNCF Adopts Meshery to Advance Service Mesh Management",
  "subtitle": "",
  "date": "2021-10-14 04:00:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./devops.png",
  "eurl": "https://devops.com/cncf-adopts-meshery-to-advance-service-mesh-management/",
  "published": true,
  "redirect_from": ["/news/cncf-adopts-meshery-to-advance-service-mesh-management"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "The Cloud Native Computing Foundation (CNCF) announced this week during the ServiceMeshCon/KubeCon + CloudNativeCon conference that Meshery, a service mesh management plane created by Layer5, has become a sandbox-level project."), mdx("p", null, "In addition, Layer5 has also donated Service Mesh Performance (SMP), a set of tools for measuring the efficiency of a service mesh, to the CNCF. SMP provides an open source framework to define standardized benchmarking practices, performance test configurations and measurements as part of an effort to create a MeshMark index for rating a service mesh. A set of service mesh performance methodologies will also be published by the IEEE later this month, developed in collaboration with engineers from Layer5, Intel, Red Hat and HashiCorp."), mdx("p", null, "Layer5 CEO Lee Calcote said the goal is to make it simpler for IT teams to determine which service mesh to employ based on their specific use case requirements."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full article on ", mdx("a", {
    parentName: "strong",
    "href": "https://devops.com/cncf-adopts-meshery-to-advance-service-mesh-management/"
  }, "DevOps.com"), "."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/cncf-adopts-meshery-to-advance-service-mesh-management</link><guid isPermaLink="false">https://layer5.io/company/news/cncf-adopts-meshery-to-advance-service-mesh-management</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Thu, 14 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/57928de15340ab6805b8b22b3c0825cc/devops.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;The Cloud Native Computing Foundation (CNCF) announced this week during the ServiceMeshCon/KubeCon + CloudNativeCon conference that Meshery, a service mesh management plane created by Layer5, has become a sandbox-level project.&lt;/p&gt;&lt;p&gt;In addition, Layer5 has also donated Service Mesh Performance (SMP), a set of tools for measuring the efficiency of a service mesh, to the CNCF. SMP provides an open source framework to define standardized benchmarking practices, performance test configurations and measurements as part of an effort to create a MeshMark index for rating a service mesh. A set of service mesh performance methodologies will also be published by the IEEE later this month, developed in collaboration with engineers from Layer5, Intel, Red Hat and HashiCorp.&lt;/p&gt;&lt;p&gt;Layer5 CEO Lee Calcote said the goal is to make it simpler for IT teams to determine which service mesh to employ based on their specific use case requirements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the full article on &lt;a href=&quot;https://devops.com/cncf-adopts-meshery-to-advance-service-mesh-management/&quot;&gt;DevOps.com&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[CNCF Adopts Service Mesh Performance Standard Established by Layer5 ]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "CNCF Adopts Service Mesh Performance Standard Established by Layer5 ",
  "subtitle": "5,000 service mesh performance tests under analysis",
  "date": "2021-10-13 04:00:05 +0000",
  "author": "The Newsroom",
  "category": "Press Release",
  "thumbnail": "../../../assets/images/service-mesh-performance/horizontal/smp-dark-text-side.png",
  "published": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "LOS ANGELES, Oct. 13, 2021 - ServiceMeshCon/KubeCon + CloudNativeCon: Layer5 today announced Service Mesh Performance, an open source standard for service mesh efficiency, a growing consideration for cloud native operators and developers utilizing a service mesh in their infrastructure. With the myriad service meshes available and their sophisticated configurations, distributed systems efficacy and performance management is a continuous concern."), mdx("p", null, "\u201CWe donated the Service Mesh Performance specification and body of research surrounding it offers a much-needed vendor-neutral home for providing (often contentious) insights to the popular performance and efficiency questions facing service mesh vendors and more broadly cloud native infrastructure\u201D, said Layer5 Founder and CEO Lee Calcote. \u201CService Mesh Performance provides a unified framework to define standardized benchmarking practices, performance test configurations, homogenous measurements, and ultimately, MeshMark, a new performance measurement index to measure the efficiency of  service meshes and their workloads both in and outside of Kubernetes.\u201D"), mdx("h3", null, "Standardizing Service Mesh Value Measurement"), mdx("a", {
    href: "https://smp-spec.io"
  }, "Service Mesh Performance"), " is a vendor neutral, cloud native performance measurement standard for capturing and characterizing application and infrastructure efficiency, including details of infrastructure capacity, service mesh configuration, and workload metadata.", mdx("ol", null, mdx("li", null, "the ability to reason over the efficiency by which cloud native infrastructure is run, specifically in context of a service mesh and its network functions, including custom filters and/or protocol translators using WebAssembly or other."), mdx("li", null, "standard benchmarks of service mesh performance"), mdx("li", null, "common vernacular and measurement for exchange of performance information from system-to-system and mesh-to-mesh"), mdx("li", null, "apples-to-apples performance comparisons of service mesh deployments and tooling to trend workload performance."), mdx("li", null, "a universal performance index to gauge a service mesh\u2019s efficiency against deployments in other organizations\u2019 environments.")), mdx("p", null, "\"A common language and understanding when dealing with system performance measurements is incredibly important when comparing benchmarks from different systems or historical data from a single system; a slight variation in the measurement approach completely invalidates the comparison.\u201D, said Nic Jackson, SMP Maintainer and Principal Developer Advocate at HashiCorp. \u201CSMP attempts to solve these problems, bringing together a community of incredibly knowledgeable practitioners passionate about improving system performance measurements.\""), mdx("img", {
    src: smpMeshery,
    alt: "SMP in Meshery"
  }), mdx("h3", null, "CNCF Adopts the Service Mesh Performance project"), mdx("p", null, "With multiple academic institutions and many vendors involved in the project, the CNCF provides a neutral place for publication of this research and encourages participation from each service mesh vendor under the promise of unbiased analysis, which will help all involved to collectively improve their service mesh implementations and end users to improve operations of their deployments."), mdx("p", null, "\u201CAs communication networks evolve toward cloud native 5G and Edge computing, service mesh forms the basis of underlying infrastructure and application networking\u201D, said Sunku Raganath, SMP Maintainer and Solutions Architect at Intel. \u201CStudying service mesh performance across the multitude of deployment scenarios enables us to understand its impact on latency and throughput, in turn, enabling application developers and infrastructure providers to customize and control service mesh behavior within these latency constrained environments\u201D. Service Mesh Performance is squarely focused on critical scenarios of performance management across 5G and Edge computing environments. \u201CAn efficient service mesh performance for the given combination of resources for a particular KPI will determine whether the current hardware and software scheduling environment is optimal or needs a change\u201C, said Mrittika Ganguli, Director and PE, cloud native solutions, NEXG, Intel."), mdx("h3", null, "Partnership with University of Texas at Austin, Intel, HashiCorp, and Red Hat engineers"), mdx("p", null, "\u201CMore than performance, in collaboration with our maintainers from Layer5, Intel, Red Hat, and HashiCorp, we are actively standardizing service mesh value measurement in the form of a new index to be announced early next year\u201D, said Calcote. \u201CAs a foundation for this research, 5,000 service mesh performance tests donated by users of Meshery have been donated and are under analysis.\u201D "), mdx("p", null, "Performance tests are run by Meshery, the open source, multi-mesh manager. Meshery is the canonical implementation of Service Mesh Performance (SMP) and the conformance tool of Service Mesh Interface (SMI). Meshery implements and helps users adopt and vendors uphold these specifications. A jointly authored paper on service mesh performance methodologies will be published by the IEEE later this month, which explores how to model your service mesh topology and optimize for your ideal configuration in context of how much operators value properties of resiliency, performance, throughput, and latency."), mdx("h3", null, "Service Mesh Performance Resources"), mdx("ul", null, mdx("li", null, mdx("a", {
    href: "https://smp-spec.io/subscribe"
  }, "Community Newsletter")), mdx("li", null, mdx("a", {
    href: "https://discuss.layer5.io"
  }, "Service Mesh Discussion Forum")), mdx("li", null, mdx("a", {
    href: "https://twitter.com/smp_spec"
  }, "Service Mesh Performance Twitter")), mdx("li", null, mdx("a", {
    href: "https://www.linkedin.com/showcase/service-mesh-performance"
  }, "Service Mesh Performance LinkedIn")), mdx("li", null, mdx("a", {
    href: "https://www.youtube.com/watch?v=_yrncjtPpg4&list=PL3A-A6hPO2INwi8A3NNClvdCxDoHa9NOU"
  }, "Service Mesh Performance YouTube")), mdx("li", null, mdx("a", {
    href: "https://smp-spec.io"
  }, "Service Mesh Performance Website"))), mdx("h3", null, "About Layer5"), "Layer5 offers cloud native application management by harnessing the unique position service meshes have in changing how developers write applications, how operators run modern infrastructure and how product owners manage their service offerings. Layer5\u2019s MeshMap delivers the world\u2019s only universal service mesh designer. Layer5\u2019s leadership stewards the Network and Service Mesh groups in the CNCF."));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/cncf-adopts-service-mesh-performance-standard-established-by-layer5</link><guid isPermaLink="false">https://layer5.io/company/news/cncf-adopts-service-mesh-performance-standard-established-by-layer5</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Wed, 13 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/030bb4fdedcf6eac8f7b64bc2d92a525/smp-dark-text-side.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;LOS ANGELES, Oct. 13, 2021 - ServiceMeshCon/KubeCon + CloudNativeCon: Layer5 today announced Service Mesh Performance, an open source standard for service mesh efficiency, a growing consideration for cloud native operators and developers utilizing a service mesh in their infrastructure. With the myriad service meshes available and their sophisticated configurations, distributed systems efficacy and performance management is a continuous concern.&lt;/p&gt;&lt;p&gt;“We donated the Service Mesh Performance specification and body of research surrounding it offers a much-needed vendor-neutral home for providing (often contentious) insights to the popular performance and efficiency questions facing service mesh vendors and more broadly cloud native infrastructure”, said Layer5 Founder and CEO Lee Calcote. “Service Mesh Performance provides a unified framework to define standardized benchmarking practices, performance test configurations, homogenous measurements, and ultimately, MeshMark, a new performance measurement index to measure the efficiency of  service meshes and their workloads both in and outside of Kubernetes.”&lt;/p&gt;&lt;h3&gt;Standardizing Service Mesh Value Measurement&lt;/h3&gt;&lt;a href=&quot;https://smp-spec.io&quot;&gt;Service Mesh Performance&lt;/a&gt; is a vendor neutral, cloud native performance measurement standard for capturing and characterizing application and infrastructure efficiency, including details of infrastructure capacity, service mesh configuration, and workload metadata.&lt;ol&gt;&lt;li&gt;the ability to reason over the efficiency by which cloud native infrastructure is run, specifically in context of a service mesh and its network functions, including custom filters and/or protocol translators using WebAssembly or other.&lt;/li&gt;&lt;li&gt;standard benchmarks of service mesh performance&lt;/li&gt;&lt;li&gt;common vernacular and measurement for exchange of performance information from system-to-system and mesh-to-mesh&lt;/li&gt;&lt;li&gt;apples-to-apples performance comparisons of service mesh deployments and tooling to trend workload performance.&lt;/li&gt;&lt;li&gt;a universal performance index to gauge a service mesh’s efficiency against deployments in other organizations’ environments.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;quot;A common language and understanding when dealing with system performance measurements is incredibly important when comparing benchmarks from different systems or historical data from a single system; a slight variation in the measurement approach completely invalidates the comparison.”, said Nic Jackson, SMP Maintainer and Principal Developer Advocate at HashiCorp. “SMP attempts to solve these problems, bringing together a community of incredibly knowledgeable practitioners passionate about improving system performance measurements.&amp;quot;&lt;/p&gt;&lt;img src=&quot;static/smp-meshery-6d6670922291e90b030f1b684fbcef04.png&quot; alt=&quot;SMP in Meshery&quot;/&gt;&lt;h3&gt;CNCF Adopts the Service Mesh Performance project&lt;/h3&gt;&lt;p&gt;With multiple academic institutions and many vendors involved in the project, the CNCF provides a neutral place for publication of this research and encourages participation from each service mesh vendor under the promise of unbiased analysis, which will help all involved to collectively improve their service mesh implementations and end users to improve operations of their deployments.&lt;/p&gt;&lt;p&gt;“As communication networks evolve toward cloud native 5G and Edge computing, service mesh forms the basis of underlying infrastructure and application networking”, said Sunku Raganath, SMP Maintainer and Solutions Architect at Intel. “Studying service mesh performance across the multitude of deployment scenarios enables us to understand its impact on latency and throughput, in turn, enabling application developers and infrastructure providers to customize and control service mesh behavior within these latency constrained environments”. Service Mesh Performance is squarely focused on critical scenarios of performance management across 5G and Edge computing environments. “An efficient service mesh performance for the given combination of resources for a particular KPI will determine whether the current hardware and software scheduling environment is optimal or needs a change“, said Mrittika Ganguli, Director and PE, cloud native solutions, NEXG, Intel.&lt;/p&gt;&lt;h3&gt;Partnership with University of Texas at Austin, Intel, HashiCorp, and Red Hat engineers&lt;/h3&gt;&lt;p&gt;“More than performance, in collaboration with our maintainers from Layer5, Intel, Red Hat, and HashiCorp, we are actively standardizing service mesh value measurement in the form of a new index to be announced early next year”, said Calcote. “As a foundation for this research, 5,000 service mesh performance tests donated by users of Meshery have been donated and are under analysis.” &lt;/p&gt;&lt;p&gt;Performance tests are run by Meshery, the open source, multi-mesh manager. Meshery is the canonical implementation of Service Mesh Performance (SMP) and the conformance tool of Service Mesh Interface (SMI). Meshery implements and helps users adopt and vendors uphold these specifications. A jointly authored paper on service mesh performance methodologies will be published by the IEEE later this month, which explores how to model your service mesh topology and optimize for your ideal configuration in context of how much operators value properties of resiliency, performance, throughput, and latency.&lt;/p&gt;&lt;h3&gt;Service Mesh Performance Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://smp-spec.io/subscribe&quot;&gt;Community Newsletter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://discuss.layer5.io&quot;&gt;Service Mesh Discussion Forum&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/smp_spec&quot;&gt;Service Mesh Performance Twitter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/showcase/service-mesh-performance&quot;&gt;Service Mesh Performance LinkedIn&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_yrncjtPpg4&amp;amp;list=PL3A-A6hPO2INwi8A3NNClvdCxDoHa9NOU&quot;&gt;Service Mesh Performance YouTube&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://smp-spec.io&quot;&gt;Service Mesh Performance Website&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;About Layer5&lt;/h3&gt;Layer5 offers cloud native application management by harnessing the unique position service meshes have in changing how developers write applications, how operators run modern infrastructure and how product owners manage their service offerings. Layer5’s MeshMap delivers the world’s only universal service mesh designer. Layer5’s leadership stewards the Network and Service Mesh groups in the CNCF.&lt;/div&gt;</content:encoded></item><item><title><![CDATA[CNCF Adopts Meshery, the Service Mesh Management Plane]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "CNCF Adopts Meshery, the Service Mesh Management Plane",
  "subtitle": "Standards-based and extensible service mesh management",
  "date": "2021-10-13 00:00:05 +0000",
  "author": "The Newsroom",
  "category": "Press Release",
  "thumbnail": "../../../assets/images/meshery/full-logo/meshery-logo-light-text-side.svg",
  "published": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "LOS ANGELES, CA, Oct. 13, 2021 - ServiceMeshCon/KubeCon + CloudNativeCon:  Layer5 today announced Meshery, the service mesh management plane, has been adopted by the CNCF. Offering lifecycle, configuration, and performance management, ", mdx(Link, {
    to: "/service-mesh-management/meshery",
    mdxType: "Link"
  }, "Meshery"), " enables the confident operation of any service mesh and their workloads. Built for the world of many service meshes, Meshery interoperates with ten different service meshes embracing their differentiated features. "), mdx("h3", null, "The Service Mesh Management Plane "), mdx("p", null, "\u201CWe\u2019re on a mission to see that organizations are successful in their operation of the world\u2019s next layer of cloud native infrastructure: service meshes\u201D, said Layer5 founder and CEO, Lee Calcote. \u201CThrough Meshery\u2019s management of powerful, service mesh data planes, users can expect more from their infrastructure.\u201D "), mdx("img", {
    src: MeshMap,
    alt: "Layer5 MeshMap"
  }), mdx("p", null, "\"Meshery is the perfect tool for ensuring that your service mesh applications are optimally configured and performing well; it also gives you a fantastic visual insight into what can be a large amount of textual configuration.\", said Nic Jackson, Principal Developer Advocate at HashiCorp."), mdx("p", null, "Meshery provides: "), mdx("ol", null, mdx("li", null, mdx("i", null, "Performance Management"), " - for workloads on and off of service meshes and inside and outside of Kubernetes clusters. ."), mdx("li", null, mdx("i", null, "Configuration Management"), " - with deployment of established usage patterns and analysis against configuration best practices; integration of Open Application Model."), mdx("li", null, mdx("i", null, "Lifecycle Management"), " - for service mesh provisioning and workload onboarding."), mdx("li", null, mdx("i", null, "Intelligence Management"), " - for dynamic configuration and deployment of WebAssembly filters for Envoy"), mdx("li", null, mdx("i", null, "Interoperation and federation"), " - by managing multiple service meshes concurrently.")), mdx("p", null, "60+ best practice deployment templates are actively being captured in the ", mdx(Link, {
    to: "/learn/service-mesh-books/service-mesh-patterns",
    mdxType: "Link"
  }, "Service Mesh Patterns book"), ", all of which will be deployable using Meshery. With 20+ service meshes available today, the ", mdx(Link, {
    to: "/service-mesh-landscape",
    mdxType: "Link"
  }, "service mesh landscape"), " offers some perspective as to why Meshery supports 10 different service meshes: "), mdx("ul", null, mdx("li", null, "AWS App Mesh "), mdx("li", null, "Citrix Service Mesh"), mdx("li", null, "HashiCorp Consul "), mdx("li", null, "Istio "), mdx("li", null, "Kuma"), mdx("li", null, "Linkerd"), mdx("li", null, "Network Service Mesh"), mdx("li", null, "NGINX Service Mesh "), mdx("li", null, "Open Service Mesh "), mdx("li", null, "Traefik Mesh")), mdx("h3", null, "Meshery and Service Mesh Standards "), mdx("p", null, "Meshery is the canonical implementation of ", mdx(Link, {
    to: "/projects/service-mesh-performance",
    mdxType: "Link"
  }, "Service Mesh Performance (SMP)"), " and the conformance tool of ", mdx(Link, {
    to: "/projects/service-mesh-interface-conformance",
    mdxType: "Link"
  }, "Service Mesh Interface (SMI)"), " - two service mesh specifications both hosted by the CNCF. Meshery implements and validates these specifications so that users can confidently operate their service mesh infrastructure, knowing their service mesh upholds industry standards. "), mdx("p", null, "\u201CLayer5 has been instrumental in helping us understand the patterns, best practices, and strategies in our approach to the service mesh ecosystem. Meshery has simplified the process of configuring and operating meshes. Meshery's service mesh neutrality, open source governance, and defining of industry standards like SMP, SMI, and now service mesh patterns  will ensure that Meshery helps any organization adopt meshes with utmost clarity curated to their needs\", said Yogi Porla, Customer Success Manager at HPE."), mdx("img", {
    src: Management,
    alt: "Meshery-Configuration-Management"
  }), mdx("h3", null, "The Extensible Service Mesh Manager "), mdx("p", null, "Not just a service mesh manager, Meshery comprises a set of microservices each one fitted with extension points. Users and integrators may extend Meshery by taking advantage of designated extension points. \u201CWith one of the world\u2019s largest enterprise information technology companies, leveraging Meshery as an extensible platform,\u201D said said Layer5 founder and CEO Lee Calcote, \u201Cmaintainers have spent a lot of time ensuring that extension points allow a variety of plugins and are available through Meshery\u2019s architecture.\u201D"), mdx("h3", null, "CNCF Hosts Meshery "), mdx("p", null, "\u201CDonation of Meshery to the CNCF has been the goal from the genesis of the project,\u201D said Lee Calcote, chair of the CNCF\u2019s Technical Advisory Group for Networking. \u201CThe community around Meshery is what has made it the success that it is.\u201D The CNCF\u2019s hosting of Meshery further enables existing participation of 300+ contributors from Layer5, Red Hat, VMware, HashiCorp, Cisco, Rackspace, Citrix, Instabase, Microsoft, OpenGov, Computas AS, Rill Data, Quantex, Lumina Networks, Asteria Aerospace and others. "), mdx("h3", null, "Meshery Resources"), mdx("ul", null, mdx("li", null, mdx("a", {
    href: "https://meshery.io/"
  }, "Meshery Website ")), mdx("li", null, mdx("a", {
    href: "https://twitter.com/mesheryio"
  }, "Meshery Twitter ")), mdx("li", null, mdx("a", {
    href: "https://www.linkedin.com/showcase/meshery/"
  }, "Meshery LinkedIn ")), mdx("li", null, mdx("a", {
    href: "https://meshery.io/subscribe"
  }, "Community Newsletter")), mdx("li", null, mdx("a", {
    href: "https://discuss.layer5.io"
  }, "Service Mesh Discussion Forum"))), mdx("h3", null, "About Layer5"), mdx("p", null, "Layer5 offers cloud native application management by harnessing the unique position service meshes have in changing how developers write applications, how operators run modern infrastructure and how product owners manage their service offerings. Layer5\u2019s MeshMap delivers the world\u2019s only universal service mesh designer. Layer5\u2019s leadership stewards the Network and Service Mesh groups in the CNCF."), mdx("h4", null, "Media Contact"), mdx("p", null, "Kate Suttons", mdx("br", null), "press@layer5.io")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/cncf-adopts-meshery-the-service-mesh-management-plane</link><guid isPermaLink="false">https://layer5.io/company/news/cncf-adopts-meshery-the-service-mesh-management-plane</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Wed, 13 Oct 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/3928110153f2653125354074c3febe70/meshery-logo-light-text-side.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;LOS ANGELES, CA, Oct. 13, 2021 - ServiceMeshCon/KubeCon + CloudNativeCon:  Layer5 today announced Meshery, the service mesh management plane, has been adopted by the CNCF. Offering lifecycle, configuration, and performance management, &lt;a href=&quot;/service-mesh-management/meshery&quot;&gt;Meshery&lt;/a&gt; enables the confident operation of any service mesh and their workloads. Built for the world of many service meshes, Meshery interoperates with ten different service meshes embracing their differentiated features. &lt;/p&gt;&lt;h3&gt;The Service Mesh Management Plane &lt;/h3&gt;&lt;p&gt;“We’re on a mission to see that organizations are successful in their operation of the world’s next layer of cloud native infrastructure: service meshes”, said Layer5 founder and CEO, Lee Calcote. “Through Meshery’s management of powerful, service mesh data planes, users can expect more from their infrastructure.” &lt;/p&gt;&lt;img src=&quot;static/MeshMap-290996214ec89d9d914c4ebfb761cf81.png&quot; alt=&quot;Layer5 MeshMap&quot;/&gt;&lt;p&gt;&amp;quot;Meshery is the perfect tool for ensuring that your service mesh applications are optimally configured and performing well; it also gives you a fantastic visual insight into what can be a large amount of textual configuration.&amp;quot;, said Nic Jackson, Principal Developer Advocate at HashiCorp.&lt;/p&gt;&lt;p&gt;Meshery provides: &lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;i&gt;Performance Management&lt;/i&gt; - for workloads on and off of service meshes and inside and outside of Kubernetes clusters. .&lt;/li&gt;&lt;li&gt;&lt;i&gt;Configuration Management&lt;/i&gt; - with deployment of established usage patterns and analysis against configuration best practices; integration of Open Application Model.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Lifecycle Management&lt;/i&gt; - for service mesh provisioning and workload onboarding.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Intelligence Management&lt;/i&gt; - for dynamic configuration and deployment of WebAssembly filters for Envoy&lt;/li&gt;&lt;li&gt;&lt;i&gt;Interoperation and federation&lt;/i&gt; - by managing multiple service meshes concurrently.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;60+ best practice deployment templates are actively being captured in the &lt;a href=&quot;/learn/service-mesh-books/service-mesh-patterns&quot;&gt;Service Mesh Patterns book&lt;/a&gt;, all of which will be deployable using Meshery. With 20+ service meshes available today, the &lt;a href=&quot;/service-mesh-landscape&quot;&gt;service mesh landscape&lt;/a&gt; offers some perspective as to why Meshery supports 10 different service meshes: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;AWS App Mesh &lt;/li&gt;&lt;li&gt;Citrix Service Mesh&lt;/li&gt;&lt;li&gt;HashiCorp Consul &lt;/li&gt;&lt;li&gt;Istio &lt;/li&gt;&lt;li&gt;Kuma&lt;/li&gt;&lt;li&gt;Linkerd&lt;/li&gt;&lt;li&gt;Network Service Mesh&lt;/li&gt;&lt;li&gt;NGINX Service Mesh &lt;/li&gt;&lt;li&gt;Open Service Mesh &lt;/li&gt;&lt;li&gt;Traefik Mesh&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Meshery and Service Mesh Standards &lt;/h3&gt;&lt;p&gt;Meshery is the canonical implementation of &lt;a href=&quot;/projects/service-mesh-performance&quot;&gt;Service Mesh Performance (SMP)&lt;/a&gt; and the conformance tool of &lt;a href=&quot;/projects/service-mesh-interface-conformance&quot;&gt;Service Mesh Interface (SMI)&lt;/a&gt; - two service mesh specifications both hosted by the CNCF. Meshery implements and validates these specifications so that users can confidently operate their service mesh infrastructure, knowing their service mesh upholds industry standards. &lt;/p&gt;&lt;p&gt;“Layer5 has been instrumental in helping us understand the patterns, best practices, and strategies in our approach to the service mesh ecosystem. Meshery has simplified the process of configuring and operating meshes. Meshery&amp;#x27;s service mesh neutrality, open source governance, and defining of industry standards like SMP, SMI, and now service mesh patterns  will ensure that Meshery helps any organization adopt meshes with utmost clarity curated to their needs&amp;quot;, said Yogi Porla, Customer Success Manager at HPE.&lt;/p&gt;&lt;img src=&quot;static/configuration-management-0e387f3c696e0e771fc978a83f3735d7.png&quot; alt=&quot;Meshery-Configuration-Management&quot;/&gt;&lt;h3&gt;The Extensible Service Mesh Manager &lt;/h3&gt;&lt;p&gt;Not just a service mesh manager, Meshery comprises a set of microservices each one fitted with extension points. Users and integrators may extend Meshery by taking advantage of designated extension points. “With one of the world’s largest enterprise information technology companies, leveraging Meshery as an extensible platform,” said said Layer5 founder and CEO Lee Calcote, “maintainers have spent a lot of time ensuring that extension points allow a variety of plugins and are available through Meshery’s architecture.”&lt;/p&gt;&lt;h3&gt;CNCF Hosts Meshery &lt;/h3&gt;&lt;p&gt;“Donation of Meshery to the CNCF has been the goal from the genesis of the project,” said Lee Calcote, chair of the CNCF’s Technical Advisory Group for Networking. “The community around Meshery is what has made it the success that it is.” The CNCF’s hosting of Meshery further enables existing participation of 300+ contributors from Layer5, Red Hat, VMware, HashiCorp, Cisco, Rackspace, Citrix, Instabase, Microsoft, OpenGov, Computas AS, Rill Data, Quantex, Lumina Networks, Asteria Aerospace and others. &lt;/p&gt;&lt;h3&gt;Meshery Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://meshery.io/&quot;&gt;Meshery Website &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/mesheryio&quot;&gt;Meshery Twitter &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/showcase/meshery/&quot;&gt;Meshery LinkedIn &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://meshery.io/subscribe&quot;&gt;Community Newsletter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://discuss.layer5.io&quot;&gt;Service Mesh Discussion Forum&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;About Layer5&lt;/h3&gt;&lt;p&gt;Layer5 offers cloud native application management by harnessing the unique position service meshes have in changing how developers write applications, how operators run modern infrastructure and how product owners manage their service offerings. Layer5’s MeshMap delivers the world’s only universal service mesh designer. Layer5’s leadership stewards the Network and Service Mesh groups in the CNCF.&lt;/p&gt;&lt;h4&gt;Media Contact&lt;/h4&gt;&lt;p&gt;Kate Suttons&lt;br/&gt;press@layer5.io&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[CNCF Projects Bring Service Mesh Interoperability, Benchmarks]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "CNCF Projects Bring Service Mesh Interoperability, Benchmarks",
  "subtitle": "",
  "date": "2021-07-24 04:00:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./The-New-Stack-Logo.svg",
  "eurl": "https://thenewstack.io/cncf-projects-bring-service-mesh-interoperability-benchmarks/",
  "published": true,
  "redirect_from": ["/news/cncf-projects-bring-service-mesh-interoperability-benchmarks"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "Both the Meshery and Service Mesh Performance (SMP) projects joined the Cloud Native Computing Foundation (CNCF) earlier this month at the Sandbox level."), mdx("p", null, "Meshery is a multiservice mesh management plane offering lifecycle, configuration, and performance management of service meshes and their workloads, while SMP is a standard for capturing and characterizing the details of infrastructure capacity, service mesh configuration, and workload metadata."), mdx("p", null, "When the projects first applied in April for inclusion, the Technical Oversight Committee (TOC) had one clarifying question for them: should they be combined with or aligned in some manner with the Service Mesh Interface (SMI) project?"), mdx("p", null, "Lee Calcote, founder of Layer5, the company partly behind both of the projects, explained that it was an alluring prospect for the CNCF, but that, for the time being at least, the projects would continue on their own separate paths."), mdx("p", null, "Calcote, who also serves as the chair of the Network special interest group (SIG) at the CNCF, said he then presented to the CNCF the following diagram, which shows the relation between the three projects. For the time being, he said, both SMI and SMP are \u201Crelatively younger projects, both of which still are figuring out what they want to be when they grow up,\u201D and may be considered for consolidation later on down the line, while Meshery has a larger focus than the two projects and will definitely be kept on its own."), mdx("p", null, "While the SMI works to define the broadest characteristics that could apply to something defined as a service mesh, looking for the lowest common denominator, Meshery works in the opposite direction, trying to accentuate the differences and strengths of the individual services meshes. SMP, meanwhile, is more of a specification and works to provide a common format for capturing and describing data around the performance of the service mesh itself."), mdx("p", null, "In comparison to SMI, Calcote said that \u201CSMP essentially just goes a lot deeper. Part of what is trying to address is this long-standing question \u2014 and it\u2019s a question that faces the people who are adopting a service mesh today, people who are adopting service mesh tomorrow, people who have already adopted a service mesh \u2014 What should I be measuring to consider how efficiently I\u2019m running my service mesh?\u201D"), mdx("p", null, "Between the three projects, then, users have not just a way to interface with any SMI-compatible service mesh via a common API, but also a way to measure the performance of different service meshes, and finally, a method with which to interface with and operate those service meshes while taking advantage of their specific advantages."), mdx("p", null, "\u201CPart of the belief is that service meshes are an inevitable new layer in your cloud native infrastructure that over time will be a ubiquitous component,\u201D said Calcote. \u201CThere\u2019s a lot that can be done in the network, a lot of intelligence, and so Meshery, as a management plane, picks off some of those features.\u201D"), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full article on ", mdx("a", {
    parentName: "strong",
    "href": "https://thenewstack.io/cncf-projects-bring-service-mesh-interoperability-benchmarks"
  }, "THENEWSTACK"), "."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/cncf-projects-bring-service-mesh-interoperability-benchmarks</link><guid isPermaLink="false">https://layer5.io/company/news/cncf-projects-bring-service-mesh-interoperability-benchmarks</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Sat, 24 Jul 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/e0ff1ed2624282a3d6271d062788ed9c/The-New-Stack-Logo.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;Both the Meshery and Service Mesh Performance (SMP) projects joined the Cloud Native Computing Foundation (CNCF) earlier this month at the Sandbox level.&lt;/p&gt;&lt;p&gt;Meshery is a multiservice mesh management plane offering lifecycle, configuration, and performance management of service meshes and their workloads, while SMP is a standard for capturing and characterizing the details of infrastructure capacity, service mesh configuration, and workload metadata.&lt;/p&gt;&lt;p&gt;When the projects first applied in April for inclusion, the Technical Oversight Committee (TOC) had one clarifying question for them: should they be combined with or aligned in some manner with the Service Mesh Interface (SMI) project?&lt;/p&gt;&lt;p&gt;Lee Calcote, founder of Layer5, the company partly behind both of the projects, explained that it was an alluring prospect for the CNCF, but that, for the time being at least, the projects would continue on their own separate paths.&lt;/p&gt;&lt;p&gt;Calcote, who also serves as the chair of the Network special interest group (SIG) at the CNCF, said he then presented to the CNCF the following diagram, which shows the relation between the three projects. For the time being, he said, both SMI and SMP are “relatively younger projects, both of which still are figuring out what they want to be when they grow up,” and may be considered for consolidation later on down the line, while Meshery has a larger focus than the two projects and will definitely be kept on its own.&lt;/p&gt;&lt;p&gt;While the SMI works to define the broadest characteristics that could apply to something defined as a service mesh, looking for the lowest common denominator, Meshery works in the opposite direction, trying to accentuate the differences and strengths of the individual services meshes. SMP, meanwhile, is more of a specification and works to provide a common format for capturing and describing data around the performance of the service mesh itself.&lt;/p&gt;&lt;p&gt;In comparison to SMI, Calcote said that “SMP essentially just goes a lot deeper. Part of what is trying to address is this long-standing question — and it’s a question that faces the people who are adopting a service mesh today, people who are adopting service mesh tomorrow, people who have already adopted a service mesh — What should I be measuring to consider how efficiently I’m running my service mesh?”&lt;/p&gt;&lt;p&gt;Between the three projects, then, users have not just a way to interface with any SMI-compatible service mesh via a common API, but also a way to measure the performance of different service meshes, and finally, a method with which to interface with and operate those service meshes while taking advantage of their specific advantages.&lt;/p&gt;&lt;p&gt;“Part of the belief is that service meshes are an inevitable new layer in your cloud native infrastructure that over time will be a ubiquitous component,” said Calcote. “There’s a lot that can be done in the network, a lot of intelligence, and so Meshery, as a management plane, picks off some of those features.”&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the full article on &lt;a href=&quot;https://thenewstack.io/cncf-projects-bring-service-mesh-interoperability-benchmarks&quot;&gt;THENEWSTACK&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[5 Lesser-Known, But Extremely Powerful Kubernetes Service Mesh Tools]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "5 Lesser-Known, But Extremely Powerful Kubernetes Service Mesh Tools",
  "subtitle": "",
  "date": "2021-06-18 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./kubernetes-with-mesh-tools.png",
  "eurl": "https://techgenix.com/kubernetes-service-mesh-tools/",
  "published": true,
  "redirect_from": ["/news/service-mesh-offers-promising-solution-for-cloud-native-networking/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("div", null, "DevOps teams use the right tools to automate deployment plans to minimize risk to the product and customer experience. These service mesh tools also provide synchronization with web communication standards, adapted to varying security protocols, and offer better management.", mdx("h2", null, "Here are some lesser-known Kubernetes service mesh tools:"), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Autopilot:"), " Autopilot is a toolkit and SDK used for deploying and developing service mesh operators. It is developed by Solo.io, a service connectivity company. This service was launched in late-2019. The service allows its users to automate the service mesh interface for chaos experimentation, adaptive security, canary automation, and more."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Consul:"), " Consul, a service mesh solution, has a full-featured control plane. It was first released in 2014 and developed by HashiCorp. This service mesh can be installed and configured on an existing Kubernetes cluster. Its latest version is 1.9.5 that was released on April 15, 2021"), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "OSM:"), " Open Service Mesh (OSM) is an open-source service mesh created by Microsoft that supports the Kubernetes environment. It is a cloud-native service mesh that allows users to manage and secure service meshes consistently. It also offers out-of-the-box observability features for dynamic microservice environments."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Layer5:"), " Layer5 is a service mesh company and a worldwide community that offers a large collection of service mesh projects. The community creates and maintains several projects that focus on the service mesh-centric capabilities in a cloud-based environment.\nThe key projects operating under the Layer5 community include: ", mdx("inlineCode", {
    parentName: "p"
  }, "Meshery"), ", ", mdx("inlineCode", {
    parentName: "p"
  }, "Learn Layer5"), ", ", mdx("inlineCode", {
    parentName: "p"
  }, "Service Mesh Landscape"), ", ", mdx("inlineCode", {
    parentName: "p"
  }, "Image Hub"), ", ", mdx("inlineCode", {
    parentName: "p"
  }, "Meshery Operator"), ", ", mdx("inlineCode", {
    parentName: "p"
  }, "Service Mesh Interface Conformance"), ", and ", mdx("inlineCode", {
    parentName: "p"
  }, "NightHawk"), "."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Kuma:"), " Kuma is an open-source service mesh that provides support for multiple environments across clouds, such as Kubernetes and virtual machines. It was created by Kong, and it was recently added to CNCF as a Sandbox project. Moreover, Kuma is production-ready, and it is still under active development."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the  original article on ", mdx("a", {
    parentName: "strong",
    "href": "https://techgenix.com/kubernetes-service-mesh-tools/"
  }, "TechGenix"), ".")))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/5-lesser-known-but-extremely-powerful-kubernetes-service-mesh-tools</link><guid isPermaLink="false">https://layer5.io/company/news/5-lesser-known-but-extremely-powerful-kubernetes-service-mesh-tools</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Fri, 18 Jun 2021 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/270974a88ba8e6d6f43e71ef60cd252c/kubernetes-with-mesh-tools.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;div&gt;DevOps teams use the right tools to automate deployment plans to minimize risk to the product and customer experience. These service mesh tools also provide synchronization with web communication standards, adapted to varying security protocols, and offer better management.&lt;h2&gt;Here are some lesser-known Kubernetes service mesh tools:&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Autopilot:&lt;/strong&gt; Autopilot is a toolkit and SDK used for deploying and developing service mesh operators. It is developed by Solo.io, a service connectivity company. This service was launched in late-2019. The service allows its users to automate the service mesh interface for chaos experimentation, adaptive security, canary automation, and more.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Consul:&lt;/strong&gt; Consul, a service mesh solution, has a full-featured control plane. It was first released in 2014 and developed by HashiCorp. This service mesh can be installed and configured on an existing Kubernetes cluster. Its latest version is 1.9.5 that was released on April 15, 2021&lt;/p&gt;&lt;p&gt;&lt;strong&gt;OSM:&lt;/strong&gt; Open Service Mesh (OSM) is an open-source service mesh created by Microsoft that supports the Kubernetes environment. It is a cloud-native service mesh that allows users to manage and secure service meshes consistently. It also offers out-of-the-box observability features for dynamic microservice environments.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Layer5:&lt;/strong&gt; Layer5 is a service mesh company and a worldwide community that offers a large collection of service mesh projects. The community creates and maintains several projects that focus on the service mesh-centric capabilities in a cloud-based environment.
The key projects operating under the Layer5 community include: &lt;code&gt;Meshery&lt;/code&gt;, &lt;code&gt;Learn Layer5&lt;/code&gt;, &lt;code&gt;Service Mesh Landscape&lt;/code&gt;, &lt;code&gt;Image Hub&lt;/code&gt;, &lt;code&gt;Meshery Operator&lt;/code&gt;, &lt;code&gt;Service Mesh Interface Conformance&lt;/code&gt;, and &lt;code&gt;NightHawk&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Kuma:&lt;/strong&gt; Kuma is an open-source service mesh that provides support for multiple environments across clouds, such as Kubernetes and virtual machines. It was created by Kong, and it was recently added to CNCF as a Sandbox project. Moreover, Kuma is production-ready, and it is still under active development.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the  original article on &lt;a href=&quot;https://techgenix.com/kubernetes-service-mesh-tools/&quot;&gt;TechGenix&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Service Mesh Offers Promising Solution for Cloud Native Networking]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Service Mesh Offers Promising Solution for Cloud Native Networking",
  "subtitle": "Service Mesh can be thought of as a next generation of Software Defined Networking (SDN) for the cloud. Here are the main approaches.",
  "date": "2020-12-04 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./service-mesh.png",
  "eurl": "http://www.enterprisenetworkingplanet.com/datacenter/datacenter-blog/service-mesh-cloud-native-networking.html",
  "published": true,
  "redirect_from": ["/news/service-mesh-offers-promising-solution-for-cloud-native-networking/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("div", null, mdx("p", null, "\"Cloud native\" doesn't just mean \"running in the cloud.\" It's a specific deployment paradigm and uses containers and an orchestration system (usually Kubernetes) to help provision, schedule, run and control a production workload in the cloud, or even across multiple clouds. Within cloud native deployments, an increasingly common approach to networking is the service mesh concept. With a service mesh, instead of each individual container requiring a full networking stack, a grouping of containers all benefit from a mesh that provides connectivity and networking with other containers as well as the outside world."), mdx("p", null, "Service mesh in the wild\nWhile the concept of a service mesh has applicability beyond just Kubernetes deployments, that's arguably where the vast majority of deployments are today. Among the earliest cloud-native service mesh approaches is the open source Linkerd project, which is backed by Buoyant and began to really ramp up adoption in 2017."), mdx("p", null, "Over the past three years there has been an explosion of open source service mesh technology. Layer5, which develops service mesh aggregation technology, currently tracks over 20 different open and closed source mesh projects. Beyond Linkerd, among the most popular is the Google-backed Istio project, which recently hit its 1.8 milestone release. Cisco has backed the Network Service Mesh (NSM) effort, which works at a lower level in the networking stack than Linkerd, Istio and most others."), mdx("p", null, "Each mesh has its own take on configuration and capabilities, which is a good thing for users. Simply put, there is no shortage of options and there is likely to be a service mesh that already exists to meet just about any need."), mdx("p", null, "Service mesh abstraction\nWhile having lots of different service mesh technologies is good for choice, it's not necessarily a good thing for simplicity or interoperability. That's where the concept of service mesh abstraction comes into play."), mdx("p", null, "At the recent KubeCon NA 2020 virtual event, Lee Calcote, co-chair of the Cloud Native Computing Foundation (CNCF) Networking Special Interest Group (SIG) and founder of Layer5, outlined how the different service mesh abstraction technologies fit together."), mdx("p", null, "The Service Mesh Interface (SMI) is a way for any compliant service mesh to plug into Kubernetes. The Service Mesh Performance (SMP) abstraction is all about providing visibility into service mesh performance though a common interface. The third key abstraction is known as Hamlet and it provides multi-vendor service interoperation and mesh federation capabilities."), mdx("p", null, "Service mesh benefits\nThere are a number of different benefits that service meshes can bring, which are helping to accelerate adoption. Calcote explained that with a service mesh there is a decoupling of developer and operations teams such that each can iterate independently."), mdx("p", null, "As such, operators can make changes to infrastructure independent of developers. DevOps is supposed to mean developer and operations teams work together, but the reality is often quite different and the ability to build application and infrastructure separately is why service mesh has been such a winning proposition for so many organizations."), mdx("p", null, "\"We live within a software defined network landscape, and service meshes in some respects are sort of a next-gen SDN,\" Calcote said."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full article on ", mdx("a", {
    parentName: "strong",
    "href": "http://www.enterprisenetworkingplanet.com/datacenter/datacenter-blog/service-mesh-cloud-native-networking.html"
  }, "Enterprise Networking Planet"))))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/service-mesh-offers-promising-solution-for-cloud-native-networking</link><guid isPermaLink="false">https://layer5.io/company/news/service-mesh-offers-promising-solution-for-cloud-native-networking</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Fri, 04 Dec 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/18ceb88acebb24a4e9b1448e07edb6a3/service-mesh.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;div&gt;&lt;p&gt;&amp;quot;Cloud native&amp;quot; doesn&amp;#x27;t just mean &amp;quot;running in the cloud.&amp;quot; It&amp;#x27;s a specific deployment paradigm and uses containers and an orchestration system (usually Kubernetes) to help provision, schedule, run and control a production workload in the cloud, or even across multiple clouds. Within cloud native deployments, an increasingly common approach to networking is the service mesh concept. With a service mesh, instead of each individual container requiring a full networking stack, a grouping of containers all benefit from a mesh that provides connectivity and networking with other containers as well as the outside world.&lt;/p&gt;&lt;p&gt;Service mesh in the wild
While the concept of a service mesh has applicability beyond just Kubernetes deployments, that&amp;#x27;s arguably where the vast majority of deployments are today. Among the earliest cloud-native service mesh approaches is the open source Linkerd project, which is backed by Buoyant and began to really ramp up adoption in 2017.&lt;/p&gt;&lt;p&gt;Over the past three years there has been an explosion of open source service mesh technology. Layer5, which develops service mesh aggregation technology, currently tracks over 20 different open and closed source mesh projects. Beyond Linkerd, among the most popular is the Google-backed Istio project, which recently hit its 1.8 milestone release. Cisco has backed the Network Service Mesh (NSM) effort, which works at a lower level in the networking stack than Linkerd, Istio and most others.&lt;/p&gt;&lt;p&gt;Each mesh has its own take on configuration and capabilities, which is a good thing for users. Simply put, there is no shortage of options and there is likely to be a service mesh that already exists to meet just about any need.&lt;/p&gt;&lt;p&gt;Service mesh abstraction
While having lots of different service mesh technologies is good for choice, it&amp;#x27;s not necessarily a good thing for simplicity or interoperability. That&amp;#x27;s where the concept of service mesh abstraction comes into play.&lt;/p&gt;&lt;p&gt;At the recent KubeCon NA 2020 virtual event, Lee Calcote, co-chair of the Cloud Native Computing Foundation (CNCF) Networking Special Interest Group (SIG) and founder of Layer5, outlined how the different service mesh abstraction technologies fit together.&lt;/p&gt;&lt;p&gt;The Service Mesh Interface (SMI) is a way for any compliant service mesh to plug into Kubernetes. The Service Mesh Performance (SMP) abstraction is all about providing visibility into service mesh performance though a common interface. The third key abstraction is known as Hamlet and it provides multi-vendor service interoperation and mesh federation capabilities.&lt;/p&gt;&lt;p&gt;Service mesh benefits
There are a number of different benefits that service meshes can bring, which are helping to accelerate adoption. Calcote explained that with a service mesh there is a decoupling of developer and operations teams such that each can iterate independently.&lt;/p&gt;&lt;p&gt;As such, operators can make changes to infrastructure independent of developers. DevOps is supposed to mean developer and operations teams work together, but the reality is often quite different and the ability to build application and infrastructure separately is why service mesh has been such a winning proposition for so many organizations.&lt;/p&gt;&lt;p&gt;&amp;quot;We live within a software defined network landscape, and service meshes in some respects are sort of a next-gen SDN,&amp;quot; Calcote said.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the full article on &lt;a href=&quot;http://www.enterprisenetworkingplanet.com/datacenter/datacenter-blog/service-mesh-cloud-native-networking.html&quot;&gt;Enterprise Networking Planet&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[KubeCon+CloudNativeCon]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "KubeCon+CloudNativeCon",
  "subtitle": "Service Mesh Battle Stories and Fixes",
  "date": "2020-12-02 06:00:00 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./service-mesh-implementations.png",
  "eurl": "https://thenewstack.io/kubeconcloudnativecon-service-mesh-battle-stories-and-fixes/",
  "published": true,
  "redirect_from": ["/news/kubecon+cloudnativecon-service-mesh-battle-stories-and-fixes/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "As more organizations implement service meshes, they are finding what works and what needs more work, and they are creating new management practices around this knowledge. A few tried-and-tested best practices were detailed last month during KubeCon+CloudNativeCon."), mdx("p", null, "\u201CThere\u2019s a lot to say about each of these service meshes and how they work: their architecture, why they\u2019re made, what they\u2019re focused on, what they do when they came about and why some of them aren\u2019t here anymore and why we\u2019re still seeing new ones,\u201D Lee Calcote, founder of Layer5, explained during his talk entitled \u201CService Mesh Specifications and Why They Matter in Your Deployment.\u201D"), mdx("p", null, "Service mesh is increasingly seen as a requirement to manage microservices in Kubernetes environments, offering a central control plane to manage microservices access, testing, metrics and other functionalities. One-third of the respondents in The New Stack survey of our readers said their organizations already use service mesh. Among the numerous service mesh options available; Envoy, Istio, Linkerd and Kuma are but a few on offer."), mdx("h3", null, "Interoperability Is Key as Service Meshes Come and Go"), mdx("p", null, "Organizations will likely look to use at least more than one API service layer and service mesh for their clusters. This is why interoperability, and thus specifications, are critical for control planes as well. During his talk \u2014 \u201CService Mesh Specifications and Why They Matter in Your Deployment\u201D mentioned above \u2014 for example, Calcote, asked rhetorically:"), mdx("p", null, "\u201CHow many specifications, how many standards are there that have come to the rescue, so to speak, for understanding and interoperating with the various service meshes that are out there?\u201D Calcote said."), mdx("a", {
    href: serviceMeshAbstractions
  }, mdx("img", {
    src: serviceMeshAbstractions,
    alt: "service-mesh-abstractions",
    width: "100%"
  })), mdx("p", null, "A service mesh can be used for testing router performance, service latency and other variables. However, determining service mesh performance in an apples-to-apples way can be challenging. When studying \u201Cpublished results from some of the service meshes ", "[from providers]", " that do publish results about performance\u2026 what you\u2019ll find is that they\u2019re probably using an environment that isn\u2019t necessarily like yours,\u201D Calcote said. \u201CThey\u2019re also using different statistics and metrics to measure ", "[their service meshes]", " \u2026 and it doesn\u2019t help.\u201D"), mdx("a", {
    href: serviceMeshPerformance
  }, mdx("img", {
    src: serviceMeshPerformance,
    alt: "service-mesh-performance",
    width: "100%"
  })), mdx("p", null, "Service mesh performance (SMP) was created in an attempt to establish a way of comparing the performance of different services. \u201CThe SMP was born in combination with engaging with a few of those different service mesh maintainers and creating a standard way of articulating a performance of a mesh,\u201D Calcote said."), mdx("p", null, "Among the variables in consideration, in addition to the service mesh itself, include the number of clusters, workloads, the types of nodes, control plan configuration and the use of client libraries all affect performance."), mdx("p", null, "\u201CWhat costs more, what\u2019s more efficient and what\u2019s more powerful: These are all open questions that SMP assists in answering in your environment,\u201D Calcote said."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full, ", mdx("a", {
    parentName: "strong",
    "href": "https://thenewstack.io/kubeconcloudnativecon-service-mesh-battle-stories-and-fixes/"
  }, "original post"), "."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/kubeconcloudnativecon</link><guid isPermaLink="false">https://layer5.io/company/news/kubeconcloudnativecon</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Wed, 02 Dec 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/d86a433b394e0d8dfeea955ff61bdf62/service-mesh-implementations.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;As more organizations implement service meshes, they are finding what works and what needs more work, and they are creating new management practices around this knowledge. A few tried-and-tested best practices were detailed last month during KubeCon+CloudNativeCon.&lt;/p&gt;&lt;p&gt;“There’s a lot to say about each of these service meshes and how they work: their architecture, why they’re made, what they’re focused on, what they do when they came about and why some of them aren’t here anymore and why we’re still seeing new ones,” Lee Calcote, founder of Layer5, explained during his talk entitled “Service Mesh Specifications and Why They Matter in Your Deployment.”&lt;/p&gt;&lt;p&gt;Service mesh is increasingly seen as a requirement to manage microservices in Kubernetes environments, offering a central control plane to manage microservices access, testing, metrics and other functionalities. One-third of the respondents in The New Stack survey of our readers said their organizations already use service mesh. Among the numerous service mesh options available; Envoy, Istio, Linkerd and Kuma are but a few on offer.&lt;/p&gt;&lt;h3&gt;Interoperability Is Key as Service Meshes Come and Go&lt;/h3&gt;&lt;p&gt;Organizations will likely look to use at least more than one API service layer and service mesh for their clusters. This is why interoperability, and thus specifications, are critical for control planes as well. During his talk — “Service Mesh Specifications and Why They Matter in Your Deployment” mentioned above — for example, Calcote, asked rhetorically:&lt;/p&gt;&lt;p&gt;“How many specifications, how many standards are there that have come to the rescue, so to speak, for understanding and interoperating with the various service meshes that are out there?” Calcote said.&lt;/p&gt;&lt;a href=&quot;static/service-mesh-abstractions-7913321300baf8420f5f7de66192a024.png&quot;&gt;&lt;img src=&quot;static/service-mesh-abstractions-7913321300baf8420f5f7de66192a024.png&quot; alt=&quot;service-mesh-abstractions&quot; width=&quot;100%&quot;/&gt;&lt;/a&gt;&lt;p&gt;A service mesh can be used for testing router performance, service latency and other variables. However, determining service mesh performance in an apples-to-apples way can be challenging. When studying “published results from some of the service meshes [from providers] that do publish results about performance… what you’ll find is that they’re probably using an environment that isn’t necessarily like yours,” Calcote said. “They’re also using different statistics and metrics to measure [their service meshes] … and it doesn’t help.”&lt;/p&gt;&lt;a href=&quot;static/service-mesh-performance-6e008704b48a579ee7f8546e29d355d1.png&quot;&gt;&lt;img src=&quot;static/service-mesh-performance-6e008704b48a579ee7f8546e29d355d1.png&quot; alt=&quot;service-mesh-performance&quot; width=&quot;100%&quot;/&gt;&lt;/a&gt;&lt;p&gt;Service mesh performance (SMP) was created in an attempt to establish a way of comparing the performance of different services. “The SMP was born in combination with engaging with a few of those different service mesh maintainers and creating a standard way of articulating a performance of a mesh,” Calcote said.&lt;/p&gt;&lt;p&gt;Among the variables in consideration, in addition to the service mesh itself, include the number of clusters, workloads, the types of nodes, control plan configuration and the use of client libraries all affect performance.&lt;/p&gt;&lt;p&gt;“What costs more, what’s more efficient and what’s more powerful: These are all open questions that SMP assists in answering in your environment,” Calcote said.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Read the full, &lt;a href=&quot;https://thenewstack.io/kubeconcloudnativecon-service-mesh-battle-stories-and-fixes/&quot;&gt;original post&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Meshery Provides the Service Mesh Management Plane and Kubernetes Evolves into an Enterprise Platform]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Meshery Provides the Service Mesh Management Plane and Kubernetes Evolves into an Enterprise Platform",
  "date": "2020-10-29 12:00:00 +0000",
  "author": "The Newsroom",
  "thumbnail": "./kubernetes-platform.png",
  "category": "Coverage",
  "eurl": "https://amalgaminsights.com/product/market-landscape-kubernetes-evolves-into-an-enterprise-platform/",
  "published": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx("img", {
    align: "left",
    style: {
      "padding": "15px"
    },
    src: kubernetes,
    alt: "Kubernetes-platform"
  }), mdx("p", null, "A service mesh has become a critical part of platforms based on Kubernetes clusters. It provides both east-west and north-south traffic managementxi, security, observability, and shaping for services implemented by the cluster and supporting components. As clusters have grown in size and platforms have become comprised of many clusters, maintaining a consistent view, management, and policies for network layer 4 \u2013 7 traffic has become increasingly complex."), mdx("p", null, "In response, a number of vendors have extended control planes with a multi-cluster management layer such that they federate and manage service meshes at scale across multiple clouds and on-premises deployments. Both Hashicorp Consul and VMWare Tanzu NSX Service Mesh extend the service mesh control plane past the local service mesh to allow a management layer over multiple clouds and clusters. ", mdx("u", null, "The open source project ", mdx("a", {
    href: "/service-mesh-management/meshery"
  }, mdx("b", null, "Meshery")), " is also providing a service mesh management plane as separate software that can interact using the Service Mesh Interface or through built-for-purpose adapters for a variety of existing service mesh products and projects.")), mdx("p", null, "Like Kubernetes control planes, this extension of the service mesh control plane allows for consistent management and policies across clusters in different environments, a situation that is becoming more typical in enterprise IT applications."), mdx("p", null, "Service mesh control plane federation is an emerging feature of service mesh products. Unlike Kubernetes control planes, it is not yet commonplace, but Amalgam Insights predicts that we will see service mesh control plane federation become a normal part of the service mesh landscape."), mdx("center", null, mdx("h5", {
    className: "black-text"
  }, "Access the full ", mdx("a", {
    href: "https://amalgaminsights.com/product/market-landscape-kubernetes-evolves-into-an-enterprise-platform/"
  }, "research from Amalgam Insights"))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/meshery-provides-the-service-mesh-management-plane-and-kubernetes-evolves-into-an-enterprise-platform</link><guid isPermaLink="false">https://layer5.io/company/news/meshery-provides-the-service-mesh-management-plane-and-kubernetes-evolves-into-an-enterprise-platform</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Thu, 29 Oct 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/eaa84d432f1d4a7696e80e21efa3fc1c/kubernetes-platform.png" length="0" type="image/png"/><content:encoded>&lt;img align=&quot;left&quot; style=&quot;padding:15px&quot; src=&quot;static/kubernetes-platform-1f0f43a436f90d8fba8920a55c5077f2.png&quot; alt=&quot;Kubernetes-platform&quot;/&gt;&lt;p&gt;A service mesh has become a critical part of platforms based on Kubernetes clusters. It provides both east-west and north-south traffic managementxi, security, observability, and shaping for services implemented by the cluster and supporting components. As clusters have grown in size and platforms have become comprised of many clusters, maintaining a consistent view, management, and policies for network layer 4 – 7 traffic has become increasingly complex.&lt;/p&gt;&lt;p&gt;In response, a number of vendors have extended control planes with a multi-cluster management layer such that they federate and manage service meshes at scale across multiple clouds and on-premises deployments. Both Hashicorp Consul and VMWare Tanzu NSX Service Mesh extend the service mesh control plane past the local service mesh to allow a management layer over multiple clouds and clusters. &lt;u&gt;The open source project &lt;a href=&quot;/service-mesh-management/meshery&quot;&gt;&lt;b&gt;Meshery&lt;/b&gt;&lt;/a&gt; is also providing a service mesh management plane as separate software that can interact using the Service Mesh Interface or through built-for-purpose adapters for a variety of existing service mesh products and projects.&lt;/u&gt;&lt;/p&gt;&lt;p&gt;Like Kubernetes control planes, this extension of the service mesh control plane allows for consistent management and policies across clusters in different environments, a situation that is becoming more typical in enterprise IT applications.&lt;/p&gt;&lt;p&gt;Service mesh control plane federation is an emerging feature of service mesh products. Unlike Kubernetes control planes, it is not yet commonplace, but Amalgam Insights predicts that we will see service mesh control plane federation become a normal part of the service mesh landscape.&lt;/p&gt;&lt;center&gt;&lt;h5 class=&quot;black-text&quot;&gt;Access the full &lt;a href=&quot;https://amalgaminsights.com/product/market-landscape-kubernetes-evolves-into-an-enterprise-platform/&quot;&gt;research from Amalgam Insights&lt;/a&gt;&lt;/h5&gt;&lt;/center&gt;</content:encoded></item><item><title><![CDATA[Meshery accepted into the CNCF Landscape]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Meshery accepted into the CNCF Landscape",
  "subtitle": "A story about growing together as a community and building a project that matters",
  "date": "2020-06-01 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./cncf-landscape-horizontal-color.svg",
  "eurl": "https://landscape.cncf.io/category=service-mesh&format=card-mode&grouping=category&selected=meshery",
  "published": true,
  "redirect_from": ["/news/meshery-accepted-into-cncf-landscape/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "Meshery took its first steps into the Cloud Native world in July of 2019 with the vision to ease the adoption and operation of any service mesh. Since then, Meshery as a project and Layer5 as an open source community has grown by leaps and bounds. Now, right at a year later, we are bursting with pride in announcement of:"), mdx("h3", {
    align: "center"
  }, "Meshery is officially accepted into the Cloud Native Computing Foundation's Landscape!"), mdx("br", null), "Read about our journey in the words of one of our valued contributors and proud Meshery user, Anton Weiss: ", mdx("br", null), mdx("i", null, "\"Open source contributions are a must-do for becoming a true cloud native hero. Cloud native is all about the community and one can't be a part of a community by only taking and never giving back. So, if you were looking for a promising and welcoming project to join - look no further! ", mdx("br", null), " Hop on to Layer5 Slack and we'll happily embrace you and help you get started. And it's not only coding! Documentation, testing, UI design, logos, blogs, videos - you decide where to apply your talent.\""), mdx("br", null), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "Read the full, ", mdx("a", {
    parentName: "strong",
    "href": "/blog/meshery-lands-in-the-cncf-landscape"
  }, "original post"), " in the Layer5 blog."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/meshery-accepted-into-the-cncf-landscape</link><guid isPermaLink="false">https://layer5.io/company/news/meshery-accepted-into-the-cncf-landscape</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/3c4752fd98e56b683603598033f1c84b/cncf-landscape-horizontal-color.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;Meshery took its first steps into the Cloud Native world in July of 2019 with the vision to ease the adoption and operation of any service mesh. Since then, Meshery as a project and Layer5 as an open source community has grown by leaps and bounds. Now, right at a year later, we are bursting with pride in announcement of:&lt;/p&gt;&lt;h3 align=&quot;center&quot;&gt;Meshery is officially accepted into the Cloud Native Computing Foundation&amp;#x27;s Landscape!&lt;/h3&gt;&lt;br/&gt;Read about our journey in the words of one of our valued contributors and proud Meshery user, Anton Weiss: &lt;br/&gt;&lt;i&gt;&amp;quot;Open source contributions are a must-do for becoming a true cloud native hero. Cloud native is all about the community and one can&amp;#x27;t be a part of a community by only taking and never giving back. So, if you were looking for a promising and welcoming project to join - look no further! &lt;br/&gt; Hop on to Layer5 Slack and we&amp;#x27;ll happily embrace you and help you get started. And it&amp;#x27;s not only coding! Documentation, testing, UI design, logos, blogs, videos - you decide where to apply your talent.&amp;quot;&lt;/i&gt;&lt;br/&gt;&lt;p&gt;&lt;strong&gt;Read the full, &lt;a href=&quot;/blog/meshery-lands-in-the-cncf-landscape&quot;&gt;original post&lt;/a&gt; in the Layer5 blog.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Layer5 and HashiCorp Launch Service Mesh Partnership]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Layer5 and HashiCorp Launch Service Mesh Partnership",
  "date": "2020-05-28 00:00:00 +0800",
  "author": "Lee Calcote",
  "thumbnail": "./layer5-hashicorp.png",
  "category": "Press Release",
  "eurl": "",
  "redirect_from": ["/company/news/layer5-hashicorp-launch-service-mesh-partnership/", "/company/news/layer5-hashicorp-launch-service-mesh-partnership"],
  "published": true
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("link", {
    rel: "canonical",
    href: "/company/news/layer5-and-hashicorp-launch-service-mesh-partnership"
  }), mdx("p", null, mdx("em", {
    parentName: "p"
  }, "Announced on May 28th, 2020 at DockerCon Live 2020.")), mdx("h2", null, "Meshery Announces Native Support for Consul Service Mesh"), mdx("p", null, "Today, we are pleased to announce the technology partnership of Layer5 and HashiCorp. Layer5\u2019s ", mdx("a", {
    parentName: "p",
    "href": "https://layer5.io/service-mesh-management/meshery"
  }, "Meshery"), ", the service mesh management plane, and HashiCorp\u2019s ", mdx("a", {
    parentName: "p",
    "href": "https://consul.io"
  }, "Consul"), " integrate to provide advanced, cloud native infrastructure solutions for containerized and non-containerized workloads - strengths of Consul. The marriage of these technologies forms a layering of network planes: data, control, and management."), mdx("a", {
    href: layer5_hashicorp_partnership
  }, mdx("img", {
    src: layer5_hashicorp_partnership,
    alt: "layer5-hashicorp-partnership",
    width: "100%"
  })), mdx("p", null, mdx("em", {
    parentName: "p"
  }, "Service Mesh Planes: Consul and Meshery. Learn more about service mesh planes in ", mdx("a", {
    parentName: "em",
    "href": "https://layer5.io/books/the-enterprise-path-to-service-mesh-architectures"
  }, "The Enterprise Path to Service Mesh Architectures"), ".")), mdx("p", null, "Consul\u2019s broad and prevalent use across ", mdx("a", {
    parentName: "p",
    "href": "https://learn.hashicorp.com/consul/datacenter-deploy/reference-architecture"
  }, "any runtime or infrastructure"), " (bare metal servers, virtual machines, Kubernetes clusters, and any cloud) is a key facilitator of the modernization of IT infrastructure - a significant attractant for Layer5 to focus on this integration; to meet customers where they\u2019re at. The lynchpin of the integration of Consul and Meshery is the Meshery Adapter for Consul. Through this adapter, Meshery facilitates lifecycle management of Consul service mesh deployments, evaluates and espouses configuration best practices published by HashiCorp. Meshery provides users with an interface to apply custom configuration to their Consul service mesh in an ad hoc fashion."), mdx("h3", null, "Lifecycle management of sample applications"), mdx("p", null, "The ", mdx("a", {
    parentName: "p",
    "href": "https://docs.meshery.io/service-meshes/adapters/consul"
  }, "Meshery Adapter for Consul"), " comes bundled with a handful of sample applications for evaluating, exploring, and learning how to operate Consul service mesh. Many operators are new to the ongoing administrative tasks of running a healthy and optimized Consul service mesh deployment. In advance of their production deployments, operators may utilize Meshery to quickly deploy Consul with sample applications to gain familiarity with the many features of Consul."), mdx("p", null, "Demonstrated at DockerCon 2020, is the \u201C", mdx("a", {
    parentName: "p",
    "href": "https://github.com/layer5io/image-hub"
  }, "Image Hub"), "\u201D, a sample application built to allow users to explore Consul\u2019s feature set, and specifically, an experimental area of Consul\u2019s data plane: Envoy\u2019s impending support for WebAssembly."), mdx("h3", null, "Performance management of Consul and it\u2019s workloads"), mdx("p", null, "In order to assess the overall performance of the service mesh, and the overhead of individual, fine-grained traffic control mechanisms defined in Consul\u2019s control plane and enforced through Consul\u2019s intelligent data plane, Meshery provides users with statistical analysis of the responsiveness of their services and performance of the service mesh. As highlighted by Docker Captain, ", mdx("a", {
    parentName: "p",
    "href": "https://twitter.com/lucjuggery"
  }, "Luc Juggery"), ", performance is an ongoing concern:"), mdx("div", {
    style: {
      "margin": "20px"
    }
  }, "Running a performance test is not a one shot thing. Tests should be run on a regular basis to (re)establish baselines and evaluate configuration changes:", mdx("ul", null, mdx("li", null, "- for each new release of the chosen service mesh"), mdx("li", null, "- for each change of the configuration of your service mesh"), mdx("li", null, "- for each new release of the application\""))), mdx("p", null, "Meshery\u2019s ability to connect to Prometheus instances to retrieve and account for cluster and application-level metrics is popularly used during Meshery\u2019s service mesh performance tests. Likewise, Meshery\u2019s ability to connect to and import existing dashboards, panels, and charts from Grafana is instrumental in allowing users to retain their existing investment in dashboards and metrics they have curated over time."), mdx("h2", null, "Meshery Announces Experimental Support for WebAssembly using Consul"), mdx("p", null, "Today, at ", mdx("a", {
    parentName: "p",
    "href": "https://docker.events.cube365.net/docker/dockercon/content/Videos/63TCCNpzDC7Xxnm8b"
  }, "DockerCon 2020"), ", we demonstrate technology leadership in advanced data plane engineering for near-native performance of fine-grained traffic control facilitated by Meshery and Consul with the use of Envoy and WebAssembly."), mdx("a", {
    href: layer5_image_hub
  }, mdx("img", {
    src: layer5_image_hub,
    alt: "layer5-hashicorp-imagehub",
    width: "100%"
  })), mdx("p", null, mdx("em", {
    parentName: "p"
  }, "In this demonstration, Meshery takes advantage of Consul\u2019s use of Envoy. Envoy support for WebAssembly is impending.")), mdx("h3", null, "WebAssembly\u2019s near-native performance"), mdx("p", null, "WebAssembly, or WASM, is an open standard that defines a binary format for executable programs. Through WebAssembly System Interface (WASI), it also defines interfaces for facilitating interaction with host environments. The initial focus of these host environments was browsers and large web applications with the intention of securely running programs to improve performance. As an open standard, WASM is maintained by the W3C, and has been adopted by all modern browsers. After HTML, CSS, and Javascript, WebAssembly is the fourth language to natively run in web browsers."), mdx("p", null, "WebAssembly is exciting because of its performance characteristics, running between 10% to 20% overhead as compared to natively executed code for network filtering use cases. WebAssembly bears some resemblance to Docker given its high degree of portability. Like the Java Virtual Machine (JVM), WASM\u2019s virtual stack machine is becoming a write once, run anywhere (WORA). WASM executables are precompiled with a healthy variety of languages supporting it as a compilation target - currently about 40 languages."), mdx("p", null, "WASM support is coming to Envoy through the efforts of Google, and Envoy maintainers embedding Google's open source high-performance JavaScript and WebAssembly engine, V8, into Envoy. Through the WebAssembly System Interface, Envoy exposes an Application Binary Interface (ABI) to WASM modules, so that they can operate as Envoy filters. The way WASI works is straight-forward. You write your application in your favourite languages like Rust, C or C++. Then, build and compile them into a WebAssembly binary targeting the host environment. The generated binary requires the WebAssembly runtime to provide the necessary interfaces to system calls for the binary to execute. Conceptually, this is similar to JVM. If you have a JVM installed then you can run any Java-like languages on it. Similarly, with a runtime, you can run the WebAssembly binary."), mdx("h2", null, "Learn more"), mdx("p", null, "This integration of management, control, and data planes is a powerful combination. See Meshery and Consul in-action at ", mdx("a", {
    parentName: "p",
    "href": "https://docker.events.cube365.net/docker/dockercon/content/Videos/63TCCNpzDC7Xxnm8b"
  }, "DockerCon 2020"), ". Learn more about ", mdx("a", {
    parentName: "p",
    "href": "https://www.hashicorp.com/integrations/layer5-io/consul/"
  }, "Layer5 and HashiCorp\u2019s partnership"), "."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "About Consul")), mdx("p", null, "For more information about Consul, please visit: ", mdx("a", {
    parentName: "p",
    "href": "https://www.consul.io"
  }, "https://www.consul.io"), "."), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "About HashiCorp")), mdx("p", null, "For more information about HashiCorp, please visit: ", mdx("a", {
    parentName: "p",
    "href": "https://hashicorp.com"
  }, "https://hashicorp.com")), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "About Meshery")), mdx("p", null, "For more information about Meshery, please visit: ", mdx("a", {
    parentName: "p",
    "href": "https://meshery.io"
  }, "https://meshery.io")), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "About Layer5")), mdx("p", null, "For more information about Layer5, please visit: ", mdx("a", {
    parentName: "p",
    "href": "https://layer5.io"
  }, "https://layer5.io"))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/layer5-and-hashicorp-launch-service-mesh-partnership</link><guid isPermaLink="false">https://layer5.io/company/news/layer5-and-hashicorp-launch-service-mesh-partnership</guid><dc:creator><![CDATA[Lee Calcote]]></dc:creator><pubDate>Wed, 27 May 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/2221512c963502de5cab21cb199b8995/layer5-hashicorp.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;link rel=&quot;canonical&quot; href=&quot;/company/news/layer5-and-hashicorp-launch-service-mesh-partnership&quot;/&gt;&lt;p&gt;&lt;em&gt;Announced on May 28th, 2020 at DockerCon Live 2020.&lt;/em&gt;&lt;/p&gt;&lt;h2&gt;Meshery Announces Native Support for Consul Service Mesh&lt;/h2&gt;&lt;p&gt;Today, we are pleased to announce the technology partnership of Layer5 and HashiCorp. Layer5’s &lt;a href=&quot;https://layer5.io/service-mesh-management/meshery&quot;&gt;Meshery&lt;/a&gt;, the service mesh management plane, and HashiCorp’s &lt;a href=&quot;https://consul.io&quot;&gt;Consul&lt;/a&gt; integrate to provide advanced, cloud native infrastructure solutions for containerized and non-containerized workloads - strengths of Consul. The marriage of these technologies forms a layering of network planes: data, control, and management.&lt;/p&gt;&lt;a href=&quot;static/Layer5-HashiCorp-Service-Mesh-Partnership-44f0a1cc7276da44dd39915fe5bc8b2e.png&quot;&gt;&lt;img src=&quot;static/Layer5-HashiCorp-Service-Mesh-Partnership-44f0a1cc7276da44dd39915fe5bc8b2e.png&quot; alt=&quot;layer5-hashicorp-partnership&quot; width=&quot;100%&quot;/&gt;&lt;/a&gt;&lt;p&gt;&lt;em&gt;Service Mesh Planes: Consul and Meshery. Learn more about service mesh planes in &lt;a href=&quot;https://layer5.io/books/the-enterprise-path-to-service-mesh-architectures&quot;&gt;The Enterprise Path to Service Mesh Architectures&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Consul’s broad and prevalent use across &lt;a href=&quot;https://learn.hashicorp.com/consul/datacenter-deploy/reference-architecture&quot;&gt;any runtime or infrastructure&lt;/a&gt; (bare metal servers, virtual machines, Kubernetes clusters, and any cloud) is a key facilitator of the modernization of IT infrastructure - a significant attractant for Layer5 to focus on this integration; to meet customers where they’re at. The lynchpin of the integration of Consul and Meshery is the Meshery Adapter for Consul. Through this adapter, Meshery facilitates lifecycle management of Consul service mesh deployments, evaluates and espouses configuration best practices published by HashiCorp. Meshery provides users with an interface to apply custom configuration to their Consul service mesh in an ad hoc fashion.&lt;/p&gt;&lt;h3&gt;Lifecycle management of sample applications&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://docs.meshery.io/service-meshes/adapters/consul&quot;&gt;Meshery Adapter for Consul&lt;/a&gt; comes bundled with a handful of sample applications for evaluating, exploring, and learning how to operate Consul service mesh. Many operators are new to the ongoing administrative tasks of running a healthy and optimized Consul service mesh deployment. In advance of their production deployments, operators may utilize Meshery to quickly deploy Consul with sample applications to gain familiarity with the many features of Consul.&lt;/p&gt;&lt;p&gt;Demonstrated at DockerCon 2020, is the “&lt;a href=&quot;https://github.com/layer5io/image-hub&quot;&gt;Image Hub&lt;/a&gt;”, a sample application built to allow users to explore Consul’s feature set, and specifically, an experimental area of Consul’s data plane: Envoy’s impending support for WebAssembly.&lt;/p&gt;&lt;h3&gt;Performance management of Consul and it’s workloads&lt;/h3&gt;&lt;p&gt;In order to assess the overall performance of the service mesh, and the overhead of individual, fine-grained traffic control mechanisms defined in Consul’s control plane and enforced through Consul’s intelligent data plane, Meshery provides users with statistical analysis of the responsiveness of their services and performance of the service mesh. As highlighted by Docker Captain, &lt;a href=&quot;https://twitter.com/lucjuggery&quot;&gt;Luc Juggery&lt;/a&gt;, performance is an ongoing concern:&lt;/p&gt;&lt;div style=&quot;margin:20px&quot;&gt;Running a performance test is not a one shot thing. Tests should be run on a regular basis to (re)establish baselines and evaluate configuration changes:&lt;ul&gt;&lt;li&gt;- for each new release of the chosen service mesh&lt;/li&gt;&lt;li&gt;- for each change of the configuration of your service mesh&lt;/li&gt;&lt;li&gt;- for each new release of the application&amp;quot;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;p&gt;Meshery’s ability to connect to Prometheus instances to retrieve and account for cluster and application-level metrics is popularly used during Meshery’s service mesh performance tests. Likewise, Meshery’s ability to connect to and import existing dashboards, panels, and charts from Grafana is instrumental in allowing users to retain their existing investment in dashboards and metrics they have curated over time.&lt;/p&gt;&lt;h2&gt;Meshery Announces Experimental Support for WebAssembly using Consul&lt;/h2&gt;&lt;p&gt;Today, at &lt;a href=&quot;https://docker.events.cube365.net/docker/dockercon/content/Videos/63TCCNpzDC7Xxnm8b&quot;&gt;DockerCon 2020&lt;/a&gt;, we demonstrate technology leadership in advanced data plane engineering for near-native performance of fine-grained traffic control facilitated by Meshery and Consul with the use of Envoy and WebAssembly.&lt;/p&gt;&lt;a href=&quot;static/layer5-image-hub-on-hashicorp-consul-3c51456fd54ba499b00d97d93f32c996.png&quot;&gt;&lt;img src=&quot;static/layer5-image-hub-on-hashicorp-consul-3c51456fd54ba499b00d97d93f32c996.png&quot; alt=&quot;layer5-hashicorp-imagehub&quot; width=&quot;100%&quot;/&gt;&lt;/a&gt;&lt;p&gt;&lt;em&gt;In this demonstration, Meshery takes advantage of Consul’s use of Envoy. Envoy support for WebAssembly is impending.&lt;/em&gt;&lt;/p&gt;&lt;h3&gt;WebAssembly’s near-native performance&lt;/h3&gt;&lt;p&gt;WebAssembly, or WASM, is an open standard that defines a binary format for executable programs. Through WebAssembly System Interface (WASI), it also defines interfaces for facilitating interaction with host environments. The initial focus of these host environments was browsers and large web applications with the intention of securely running programs to improve performance. As an open standard, WASM is maintained by the W3C, and has been adopted by all modern browsers. After HTML, CSS, and Javascript, WebAssembly is the fourth language to natively run in web browsers.&lt;/p&gt;&lt;p&gt;WebAssembly is exciting because of its performance characteristics, running between 10% to 20% overhead as compared to natively executed code for network filtering use cases. WebAssembly bears some resemblance to Docker given its high degree of portability. Like the Java Virtual Machine (JVM), WASM’s virtual stack machine is becoming a write once, run anywhere (WORA). WASM executables are precompiled with a healthy variety of languages supporting it as a compilation target - currently about 40 languages.&lt;/p&gt;&lt;p&gt;WASM support is coming to Envoy through the efforts of Google, and Envoy maintainers embedding Google&amp;#x27;s open source high-performance JavaScript and WebAssembly engine, V8, into Envoy. Through the WebAssembly System Interface, Envoy exposes an Application Binary Interface (ABI) to WASM modules, so that they can operate as Envoy filters. The way WASI works is straight-forward. You write your application in your favourite languages like Rust, C or C++. Then, build and compile them into a WebAssembly binary targeting the host environment. The generated binary requires the WebAssembly runtime to provide the necessary interfaces to system calls for the binary to execute. Conceptually, this is similar to JVM. If you have a JVM installed then you can run any Java-like languages on it. Similarly, with a runtime, you can run the WebAssembly binary.&lt;/p&gt;&lt;h2&gt;Learn more&lt;/h2&gt;&lt;p&gt;This integration of management, control, and data planes is a powerful combination. See Meshery and Consul in-action at &lt;a href=&quot;https://docker.events.cube365.net/docker/dockercon/content/Videos/63TCCNpzDC7Xxnm8b&quot;&gt;DockerCon 2020&lt;/a&gt;. Learn more about &lt;a href=&quot;https://www.hashicorp.com/integrations/layer5-io/consul/&quot;&gt;Layer5 and HashiCorp’s partnership&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;About Consul&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about Consul, please visit: &lt;a href=&quot;https://www.consul.io&quot;&gt;https://www.consul.io&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;About HashiCorp&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about HashiCorp, please visit: &lt;a href=&quot;https://hashicorp.com&quot;&gt;https://hashicorp.com&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;About Meshery&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about Meshery, please visit: &lt;a href=&quot;https://meshery.io&quot;&gt;https://meshery.io&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;About Layer5&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For more information about Layer5, please visit: &lt;a href=&quot;https://layer5.io&quot;&gt;https://layer5.io&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[The New Stack: What the Numbers Say about How Service Meshes Are Used Today]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "The New Stack: What the Numbers Say about How Service Meshes Are Used Today",
  "subtitle": "",
  "date": "2020-03-13 08:04:00 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./what-the-numbers-say-about-how-service-meshes-are-used-today.png",
  "eurl": "https://thenewstack.io/what-the-numbers-say-about-how-service-meshes-are-used-today/",
  "published": true,
  "redirect_from": ["https://thenewstack.io/what-the-numbers-say-about-how-service-meshes-are-used-today/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, "Service mesh technologies have emerged as a reliable way to manage observability, security and traffic management in microservices environments, typically with the use of Kubernetes for container orchestration. Specific use cases and needs for service meshes also vary.", mdx("br", null), mdx("br", null), "The New Stack recently completed a survey about service mesh use cases. While one third of those surveyed said their organizations already use service meshes to control traffic between microservices and Kubernetes environments, adoption rates and use varied significantly among the respondents. Sixteen percent of respondents said that their organization broadly uses service mesh in production environments and 17% said service meshes have limited use in production environments, for example.", mdx("br", null), mdx("br", null), "In this latest episode of The New Stack Analysts podcast, ", mdx("a", {
    href: "https://www.linkedin.com/in/leecalcote"
  }, "Lee Calcote"), ", an analyst and founder of service mesh provider ", mdx("a", {
    href: "https://layer5.io/"
  }, "Layer5"), ", and ", mdx("a", {
    href: "https://www.linkedin.com/in/brianredbeard/"
  }, "Brian \u201CRedbeard\u201D Harrington"), ", a principal product manager for OpenShift service mesh at Red Hat, discussed the many nuances of what the survey numbers really mean.", mdx("br", null), mdx("br", null), mdx("iframe", {
    width: "100%",
    height: "166",
    scrolling: "no",
    frameBorder: "no",
    allow: "autoplay",
    src: "https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/774586579%3Fsecret_token%3Ds-es7L3&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true"
  }), mdx("br", null), mdx("br", null), "Calcote notes how traffic management is seen as a key feature among the many different service mesh capabilities, but it\u2019s most useful to advanced users. Speaking about the use of traffic management functionalities, Calcote said: \u201CFolks tend to be a little more advanced as they get into that because they\u2019re at that point they\u2019re actually affecting traffic and then routing requests differently, as opposed to something like just purely observing or getting a \u2018read-only\u2019 view in their environment.\u201D", mdx("br", null), mdx("br", null), mdx("p", {
    align: "center"
  }, "See the full, ", mdx("a", {
    href: "https://thenewstack.io/what-the-numbers-say-about-how-service-meshes-are-used-today/"
  }, "original article"), " published on The New Stack.")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/the-new-stack-what-the-numbers-say-about-how-service-meshes-are-used-today</link><guid isPermaLink="false">https://layer5.io/company/news/the-new-stack-what-the-numbers-say-about-how-service-meshes-are-used-today</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Fri, 13 Mar 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/9c88cbeb3204afc91a855b9bc32fb3e1/what-the-numbers-say-about-how-service-meshes-are-used-today.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;Service mesh technologies have emerged as a reliable way to manage observability, security and traffic management in microservices environments, typically with the use of Kubernetes for container orchestration. Specific use cases and needs for service meshes also vary.&lt;br/&gt;&lt;br/&gt;The New Stack recently completed a survey about service mesh use cases. While one third of those surveyed said their organizations already use service meshes to control traffic between microservices and Kubernetes environments, adoption rates and use varied significantly among the respondents. Sixteen percent of respondents said that their organization broadly uses service mesh in production environments and 17% said service meshes have limited use in production environments, for example.&lt;br/&gt;&lt;br/&gt;In this latest episode of The New Stack Analysts podcast, &lt;a href=&quot;https://www.linkedin.com/in/leecalcote&quot;&gt;Lee Calcote&lt;/a&gt;, an analyst and founder of service mesh provider &lt;a href=&quot;https://layer5.io/&quot;&gt;Layer5&lt;/a&gt;, and &lt;a href=&quot;https://www.linkedin.com/in/brianredbeard/&quot;&gt;Brian “Redbeard” Harrington&lt;/a&gt;, a principal product manager for OpenShift service mesh at Red Hat, discussed the many nuances of what the survey numbers really mean.&lt;br/&gt;&lt;br/&gt;&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameBorder=&quot;no&quot; allow=&quot;autoplay&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/774586579%3Fsecret_token%3Ds-es7L3&amp;amp;color=%23ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true&quot;&gt;&lt;/iframe&gt;&lt;br/&gt;&lt;br/&gt;Calcote notes how traffic management is seen as a key feature among the many different service mesh capabilities, but it’s most useful to advanced users. Speaking about the use of traffic management functionalities, Calcote said: “Folks tend to be a little more advanced as they get into that because they’re at that point they’re actually affecting traffic and then routing requests differently, as opposed to something like just purely observing or getting a ‘read-only’ view in their environment.”&lt;br/&gt;&lt;br/&gt;&lt;p align=&quot;center&quot;&gt;See the full, &lt;a href=&quot;https://thenewstack.io/what-the-numbers-say-about-how-service-meshes-are-used-today/&quot;&gt;original article&lt;/a&gt; published on The New Stack.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Learn Cloud Native: Managing service meshes with Meshery]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Learn Cloud Native: Managing service meshes with Meshery",
  "subtitle": "",
  "date": "2020-03-12 12:00:00 +0000",
  "author": "The Newsroom",
  "thumbnail": "./linkerd-emojivoto.png",
  "category": "Coverage",
  "eurl": "https://www.learncloudnative.com/blog/2020-03-12-meshery-service-mesh-management-plane/",
  "published": true,
  "redirect_from": ["/news/managing-service-meshes-with-meshery/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("h3", {
    align: "center"
  }, "Learn Cloud Native: Managing service meshes with Meshery")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/learn-cloud-native-managing-service-meshes-with-meshery</link><guid isPermaLink="false">https://layer5.io/company/news/learn-cloud-native-managing-service-meshes-with-meshery</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Thu, 12 Mar 2020 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/34433b204ea21299d12cad43442c42d6/linkerd-emojivoto.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;h3 align=&quot;center&quot;&gt;Learn Cloud Native: Managing service meshes with Meshery&lt;/h3&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Vendors make a splash in 2019 service mesh implementation rush]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "author": "The Newsroom",
  "date": "2019-12-27 08:04:00 +0000",
  "title": "Vendors make a splash in 2019 service mesh implementation rush",
  "thumbnail": "./2019-12-27-vendors-make-a-splash-in-2019-service-mesh-implementation-rush.png",
  "eurl": "https://searchapparchitecture.techtarget.com/feature/Vendors-make-a-splash-in-2019-service-mesh-implementation-rush",
  "published": true,
  "category": "Coverage",
  "redirect_from": ["/news/vendors-make-a-splash-in-2019-service-mesh-implementation-rush/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "When an organization is forced to manage distributed service-to-service communication over a large network, service mesh provides a dedicated layer where separate parts of an application can communicate with each other. This way, software teams can centralize communication, rather than monitor each individual service message exchange independently."), mdx("p", null, "When service mesh emerged in 2018, many saw this technology as a way to tackle the complexity of container deployment at production scale. They also saw it as a way to address unsustainable manual traffic management processes."), mdx("p", null, "In 2019, the success of service mesh implementation inspired a rush of vendors that hoped to cash in on the need to manage services at scale. The industry saw a booming sub-ecosystem around two major service mesh options, Google's Istio and the open source Envoy, plus many \xE0 la carte tools, such as Tetrate and Meshery. A handful of newcomers jumped into the fray, such as HashiCorp, Kong, Containous, Aspen Mesh and Layer5. Despite the competition, Istio and Envoy led the pack."), mdx("p", null, "The service mesh market saw two significant events in 2019. First, Envoy Project Authors fine-tuned its increasingly popular sidecar proxy design pattern. Second, Google kept its service mesh technology, and Istio, out of the open source Cloud Native Computing Foundation (CNCF), and thereby retained proprietary control.")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/vendors-make-a-splash-in-2019-service-mesh-implementation-rush</link><guid isPermaLink="false">https://layer5.io/company/news/vendors-make-a-splash-in-2019-service-mesh-implementation-rush</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Fri, 27 Dec 2019 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/e1800fd1fbea015edf2d186dbd2e6032/2019-12-27-vendors-make-a-splash-in-2019-service-mesh-implementation-rush.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;When an organization is forced to manage distributed service-to-service communication over a large network, service mesh provides a dedicated layer where separate parts of an application can communicate with each other. This way, software teams can centralize communication, rather than monitor each individual service message exchange independently.&lt;/p&gt;&lt;p&gt;When service mesh emerged in 2018, many saw this technology as a way to tackle the complexity of container deployment at production scale. They also saw it as a way to address unsustainable manual traffic management processes.&lt;/p&gt;&lt;p&gt;In 2019, the success of service mesh implementation inspired a rush of vendors that hoped to cash in on the need to manage services at scale. The industry saw a booming sub-ecosystem around two major service mesh options, Google&amp;#x27;s Istio and the open source Envoy, plus many à la carte tools, such as Tetrate and Meshery. A handful of newcomers jumped into the fray, such as HashiCorp, Kong, Containous, Aspen Mesh and Layer5. Despite the competition, Istio and Envoy led the pack.&lt;/p&gt;&lt;p&gt;The service mesh market saw two significant events in 2019. First, Envoy Project Authors fine-tuned its increasingly popular sidecar proxy design pattern. Second, Google kept its service mesh technology, and Istio, out of the open source Cloud Native Computing Foundation (CNCF), and thereby retained proprietary control.&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[The New Stack: Meshery in top 3 service mesh developments in 2020]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "The New Stack: Meshery in top 3 service mesh developments in 2020",
  "subtitle": "",
  "date": "2019-12-12 09:13:00 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./Meshery_top3_servish_mesh_development.png",
  "eurl": "https://thenewstack.io/the-top-3-service-mesh-developments-in-2020/",
  "published": true,
  "redirect_from": ["/news/meshery-in-top3-service-mesh-developments-in-2020/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "In 2019, we saw service mesh move beyond an experimental technology and into a solution that organizations are beginning to learn is an elemental building block for any successful Kubernetes deployment. Adoption of service mesh at scale, across companies large and small, began to gain steam. As the second wave of adopters watched the cutting edge adopters trial and succeed with service mesh technology, they too began to evaluate service mesh to address the challenges Kubernetes leaves on the table."), mdx("br", null), mdx("p", null, "In tandem with growing adoption of service mesh, 2019 offered a burgeoning service mesh market. Istio and Linkerd keep chugging along, and the tooling and vendor ecosystem around Istio almost tripled throughout the year. But there were also many new players that entered the market providing alternative approaches to solving layer seven networking challenges. Meshes, such as those Kuma and Maesh offer, have emerged to provide different approaches to service mesh in order to address various edge use cases. We also saw the introduction of tools like ", mdx("a", {
    parentName: "p",
    "href": "https://smi-spec.io/"
  }, "Service Mesh Interface"), " spec and ", mdx("a", {
    parentName: "p",
    "href": "https://layer5.io/meshery/"
  }, "Meshery"), " attempt to engage an early market that is flourishing due to immense opportunity, but has yet to contract while key players are waiting for the market to choose the winners first. Adjacent projects like ", mdx("a", {
    parentName: "p",
    "href": "https://networkservicemesh.io/"
  }, "Network Service Mesh"), " bring service mesh principles to lower layers of the stack."), mdx("br", null), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "See the full, ", mdx("a", {
    parentName: "strong",
    "href": "https://thenewstack.io/the-top-3-service-mesh-developments-in-2020/"
  }, "original article"), " published on The New Stack."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/the-new-stack-meshery-in-top-3-service-mesh-developments-in-2020</link><guid isPermaLink="false">https://layer5.io/company/news/the-new-stack-meshery-in-top-3-service-mesh-developments-in-2020</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Thu, 12 Dec 2019 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/561f7be60175825e7f60abec2a9c026e/Meshery_top3_servish_mesh_development.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;In 2019, we saw service mesh move beyond an experimental technology and into a solution that organizations are beginning to learn is an elemental building block for any successful Kubernetes deployment. Adoption of service mesh at scale, across companies large and small, began to gain steam. As the second wave of adopters watched the cutting edge adopters trial and succeed with service mesh technology, they too began to evaluate service mesh to address the challenges Kubernetes leaves on the table.&lt;/p&gt;&lt;br/&gt;&lt;p&gt;In tandem with growing adoption of service mesh, 2019 offered a burgeoning service mesh market. Istio and Linkerd keep chugging along, and the tooling and vendor ecosystem around Istio almost tripled throughout the year. But there were also many new players that entered the market providing alternative approaches to solving layer seven networking challenges. Meshes, such as those Kuma and Maesh offer, have emerged to provide different approaches to service mesh in order to address various edge use cases. We also saw the introduction of tools like &lt;a href=&quot;https://smi-spec.io/&quot;&gt;Service Mesh Interface&lt;/a&gt; spec and &lt;a href=&quot;https://layer5.io/meshery/&quot;&gt;Meshery&lt;/a&gt; attempt to engage an early market that is flourishing due to immense opportunity, but has yet to contract while key players are waiting for the market to choose the winners first. Adjacent projects like &lt;a href=&quot;https://networkservicemesh.io/&quot;&gt;Network Service Mesh&lt;/a&gt; bring service mesh principles to lower layers of the stack.&lt;/p&gt;&lt;br/&gt;&lt;p&gt;&lt;strong&gt;See the full, &lt;a href=&quot;https://thenewstack.io/the-top-3-service-mesh-developments-in-2020/&quot;&gt;original article&lt;/a&gt; published on The New Stack.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[KubeCon NA: CNCF SIG Network Set Intro and Deep-Dive]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "KubeCon NA: CNCF SIG Network Set Intro and Deep-Dive",
  "subtitle": "",
  "date": "2019-11-23 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./KubeCon_NA_2019_bg-01.svg",
  "eurl": "",
  "published": true,
  "redirect_from": ["/company/news/cncf-sig-network-intro-and-deep-dive/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "KubeCon NA 2019 - San Diego, CA"), mdx("p", null, "At KubeCon 2019, Lee Calcote and Matt Klein introducted the CNCF's latest Special Interest Group for cloud native networking."), mdx("iframe", {
    width: "450",
    height: "300",
    src: "https://www.youtube.com/embed/XZ6TZQeNuKQ",
    frameBorder: "0",
    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
    allowFullScreen: true
  }), mdx("p", null, "Related news by Sean Michael Kerner: ", mdx("a", {
    href: "http://www.enterprisenetworkingplanet.com/datacenter/cncf-sig-network-set-to-push-cloud-native-networking-forward.html"
  }, "\nCNCF SIG Network Set to Push Cloud Native Networking Forward "), " (Posted Nov 23, 2019).")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/kubecon-na-cncf-sig-network-set-intro-and-deep-dive</link><guid isPermaLink="false">https://layer5.io/company/news/kubecon-na-cncf-sig-network-set-intro-and-deep-dive</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Sat, 23 Nov 2019 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/fcc022de95829bfc4034ed72a6323daa/KubeCon_NA_2019_bg-01.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;KubeCon NA 2019 - San Diego, CA&lt;/p&gt;&lt;p&gt;At KubeCon 2019, Lee Calcote and Matt Klein introducted the CNCF&amp;#x27;s latest Special Interest Group for cloud native networking.&lt;/p&gt;&lt;iframe width=&quot;450&quot; height=&quot;300&quot; src=&quot;https://www.youtube.com/embed/XZ6TZQeNuKQ&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;p&gt;Related news by Sean Michael Kerner: &lt;a href=&quot;http://www.enterprisenetworkingplanet.com/datacenter/cncf-sig-network-set-to-push-cloud-native-networking-forward.html&quot;&gt;
CNCF SIG Network Set to Push Cloud Native Networking Forward &lt;/a&gt; (Posted Nov 23, 2019).&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Enterprise Networking Planet: CNCF SIG Network Set to Push Cloud Native Networking Forward]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Enterprise Networking Planet: CNCF SIG Network Set to Push Cloud Native Networking Forward",
  "subtitle": "",
  "date": "2019-11-23 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./enterprise_networking_planet_logo_700px-e1533637827914.png",
  "eurl": "",
  "published": true,
  "redirect_from": ["/company/news/cncf-sig-network-set-to-push-cloud-native-networking-forward/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("i", null, "By Sean Michael Kerner | ", mdx("a", {
    href: "http://www.enterprisenetworkingplanet.com/datacenter/cncf-sig-network-set-to-push-cloud-native-networking-forward.html"
  }, "Enterprise Networking Planet"), " | Posted Nov 23, 2019"), mdx("p", null, "SAN DIEGO. The inaugural public meeting the Cloud Native Computing Foundation (CNCF) Networking Special Interest Group (SIG) was held in a session at the KubeCon event on Nov. 19, ushering in a new era for networking at the highly influential open source group."), mdx("img", {
    src: SIG_network,
    style: {
      "position": "relative",
      "cssFloat": "right"
    },
    alt: "SIG-network"
  }), mdx("p", null, "The CNCF is home to many different projects, including the Kubernetes container orchestration system. Kubernetes itself has its' own set of SIGs, which is the core organizing unit for the project, among those SIGs is one for networking. The CNCF however is a bigger organization that just Kubernetes and includes over 40 projects. CNCF SIGs cut across all projects, with cross project concerns in different topic areas."), mdx("p", null, "Lee Calcote, Founder at Layer5 and one of the leaders of CNCF TAG Network explained during the session that there are already a few network specific projects within the CNCF, including CNI (Container Network Interface), CoreDNS, Envoy, gRPC, Linkerd, NATS and the Network Service Mesh project."), mdx("p", null, "\"Part of what we're hoping to do is with SIGs in general is to help more impact fully scale the CNCF Technical Oversight Committee (TOC),\" Calcote said."), mdx("p", null, "Read more on ", mdx("a", {
    href: "http://www.enterprisenetworkingplanet.com/datacenter/cncf-sig-network-set-to-push-cloud-native-networking-forward.html"
  }, "Enterprise Networking Planet"), "...")));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/enterprise-networking-planet-cncf-sig-network-set-to-push-cloud-native-networking-forward</link><guid isPermaLink="false">https://layer5.io/company/news/enterprise-networking-planet-cncf-sig-network-set-to-push-cloud-native-networking-forward</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Sat, 23 Nov 2019 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/7ea034a929f022a6e2b1e5ca67c98926/enterprise_networking_planet_logo_700px-e1533637827914.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;i&gt;By Sean Michael Kerner | &lt;a href=&quot;http://www.enterprisenetworkingplanet.com/datacenter/cncf-sig-network-set-to-push-cloud-native-networking-forward.html&quot;&gt;Enterprise Networking Planet&lt;/a&gt; | Posted Nov 23, 2019&lt;/i&gt;&lt;p&gt;SAN DIEGO. The inaugural public meeting the Cloud Native Computing Foundation (CNCF) Networking Special Interest Group (SIG) was held in a session at the KubeCon event on Nov. 19, ushering in a new era for networking at the highly influential open source group.&lt;/p&gt;&lt;img src=&quot;static/SIG-network-367x200-1dc079fd5eeee73dc2633f96dfb70ffe.png&quot; style=&quot;position:relative;css-float:right&quot; alt=&quot;SIG-network&quot;/&gt;&lt;p&gt;The CNCF is home to many different projects, including the Kubernetes container orchestration system. Kubernetes itself has its&amp;#x27; own set of SIGs, which is the core organizing unit for the project, among those SIGs is one for networking. The CNCF however is a bigger organization that just Kubernetes and includes over 40 projects. CNCF SIGs cut across all projects, with cross project concerns in different topic areas.&lt;/p&gt;&lt;p&gt;Lee Calcote, Founder at Layer5 and one of the leaders of CNCF TAG Network explained during the session that there are already a few network specific projects within the CNCF, including CNI (Container Network Interface), CoreDNS, Envoy, gRPC, Linkerd, NATS and the Network Service Mesh project.&lt;/p&gt;&lt;p&gt;&amp;quot;Part of what we&amp;#x27;re hoping to do is with SIGs in general is to help more impact fully scale the CNCF Technical Oversight Committee (TOC),&amp;quot; Calcote said.&lt;/p&gt;&lt;p&gt;Read more on &lt;a href=&quot;http://www.enterprisenetworkingplanet.com/datacenter/cncf-sig-network-set-to-push-cloud-native-networking-forward.html&quot;&gt;Enterprise Networking Planet&lt;/a&gt;...&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Layer5 Joins the CNCF]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Layer5 Joins the CNCF",
  "subtitle": "",
  "date": "2019-11-15 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Press Release",
  "thumbnail": "./cncf-stacked-color.svg",
  "eurl": "https://landscape.cncf.io/category=cncf-members&format=logo-mode&grouping=category&selected=layer5-member&embed=yes",
  "published": true,
  "redirect_from": ["/news/layer5-joins-the-cncf/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, "Today, Layer5 joins the CNCF.", mdx("p", null, "From inception Layer5 has been actively stewarding, maintaining, and contributing to the Cloud Native Computing Foundation (CNCF) initiatives and projects. In the same motion that the company was founded, so too, did Layer5 become a member company of the CNCF. As a member company, Layer5 will continue to work closely with the broad community of cloud engineers. Layer5 engineers and our open source initiatives are already well-represented in the CNCF community both digitally and in-person. ", mdx("br", null), "\nLayer5 projects seamlessly integrate across many other CNCF projects, including Linkerd, Network Service Mesh, Envoy, gRPC, OpenTelemetry, OpenMetrics, Prometheus, Open Policy Agent, Kuma, Service Mesh Interface, Kubernetes, Helm, and Jaeger.", mdx("br", null))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/layer5-joins-the-cncf</link><guid isPermaLink="false">https://layer5.io/company/news/layer5-joins-the-cncf</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Fri, 15 Nov 2019 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/a15818e21ad2f8aac51161ebbd403531/cncf-stacked-color.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;Today, Layer5 joins the CNCF.&lt;p&gt;From inception Layer5 has been actively stewarding, maintaining, and contributing to the Cloud Native Computing Foundation (CNCF) initiatives and projects. In the same motion that the company was founded, so too, did Layer5 become a member company of the CNCF. As a member company, Layer5 will continue to work closely with the broad community of cloud engineers. Layer5 engineers and our open source initiatives are already well-represented in the CNCF community both digitally and in-person. &lt;br/&gt;
Layer5 projects seamlessly integrate across many other CNCF projects, including Linkerd, Network Service Mesh, Envoy, gRPC, OpenTelemetry, OpenMetrics, Prometheus, Open Policy Agent, Kuma, Service Mesh Interface, Kubernetes, Helm, and Jaeger.&lt;br/&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Forrester: Layer5 and Meshery Help Developers Focus On The Business]]></title><description><![CDATA[function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsxRuntime classic */

/* @jsx mdx */
var _frontmatter = {
  "title": "Forrester: Layer5 and Meshery Help Developers Focus On The Business",
  "subtitle": "",
  "date": "2019-10-24 12:15:05 +0000",
  "author": "The Newsroom",
  "category": "Coverage",
  "thumbnail": "./layer5-meshery-forrester.png",
  "eurl": "https://www.forrester.com/webinar/Plan+A+Service+Mesh+For+Your+Microservices+Future/-/E-WEB29705",
  "published": true,
  "redirect_from": ["/news/layer5-meshery-forrester/"]
};
var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = "wrapper";
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, ["components"]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), mdx(NewsWrapper, {
    mdxType: "NewsWrapper"
  }, mdx("p", null, "Distributed systems are hard to do well, and microservices are even harder. As an important step toward enabling mainstream developers to be successful, service mesh technology has carved out a place in the microservices landscape. There\u2019s a lot of dust covering the service mesh landscape, and there are more enterprises trying one out than using one in production, but sooner or later, you\u2019ll need a service mesh for your microservices platform. In this webinar, Forrester lays out what a service mesh can and cannot do, walks through the developing technology, and sets a foundation for planning when and how to use a service mesh."), mdx("strong", null, "Key takeaways:"), mdx("ul", null, mdx("li", null, "Learn the purpose, major functions, and structure of a service mesh."), mdx("li", null, "Understand how the diverse service mesh technology space is developing"), mdx("li", null, "Identify the major factors that influence how your organization should use a service mesh.")), mdx("p", null, mdx("strong", {
    parentName: "p"
  }, "See the full, ", mdx("a", {
    parentName: "strong",
    "href": "https://www.forrester.com/webinar/Plan+A+Service+Mesh+For+Your+Microservices+Future/-/E-WEB29705"
  }, "original research"), " published on Forrester."))));
}
;
MDXContent.isMDXComponent = true;]]></description><link>https://layer5.io/company/news/forrester-layer5-and-meshery-help-developers-focus-on-the-business</link><guid isPermaLink="false">https://layer5.io/company/news/forrester-layer5-and-meshery-help-developers-focus-on-the-business</guid><dc:creator><![CDATA[The Newsroom]]></dc:creator><pubDate>Thu, 24 Oct 2019 00:00:00 GMT</pubDate><enclosure url="https://layer5.io/static/512aa5cded35d880f73ae802c2429f97/layer5-meshery-forrester.png" length="0" type="image/png"/><content:encoded>&lt;div class=&quot;Newsstyle__NewsWrapper-sc-12r6uiw-0 jlToVU&quot;&gt;&lt;p&gt;Distributed systems are hard to do well, and microservices are even harder. As an important step toward enabling mainstream developers to be successful, service mesh technology has carved out a place in the microservices landscape. There’s a lot of dust covering the service mesh landscape, and there are more enterprises trying one out than using one in production, but sooner or later, you’ll need a service mesh for your microservices platform. In this webinar, Forrester lays out what a service mesh can and cannot do, walks through the developing technology, and sets a foundation for planning when and how to use a service mesh.&lt;/p&gt;&lt;strong&gt;Key takeaways:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;Learn the purpose, major functions, and structure of a service mesh.&lt;/li&gt;&lt;li&gt;Understand how the diverse service mesh technology space is developing&lt;/li&gt;&lt;li&gt;Identify the major factors that influence how your organization should use a service mesh.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;See the full, &lt;a href=&quot;https://www.forrester.com/webinar/Plan+A+Service+Mesh+For+Your+Microservices+Future/-/E-WEB29705&quot;&gt;original research&lt;/a&gt; published on Forrester.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</content:encoded></item></channel></rss>